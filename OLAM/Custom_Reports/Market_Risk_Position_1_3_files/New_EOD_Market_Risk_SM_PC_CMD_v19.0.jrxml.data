<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="market_risk_EOD_commodity" pageWidth="1684" pageHeight="1190" orientation="Landscape" columnWidth="1190" leftMargin="0" rightMargin="0" topMargin="20" bottomMargin="20" uuid="72377bce-b4ef-495c-b293-1930172a0c69">
	<property name="com.jaspersoft.studio.unit." value="pixel"/>
	<property name="com.jaspersoft.studio.unit.pageHeight" value="pixel"/>
	<property name="com.jaspersoft.studio.unit.pageWidth" value="pixel"/>
	<property name="com.jaspersoft.studio.unit.topMargin" value="pixel"/>
	<property name="com.jaspersoft.studio.unit.bottomMargin" value="pixel"/>
	<property name="com.jaspersoft.studio.unit.leftMargin" value="pixel"/>
	<property name="com.jaspersoft.studio.unit.rightMargin" value="pixel"/>
	<property name="com.jaspersoft.studio.unit.columnWidth" value="pixel"/>
	<property name="com.jaspersoft.studio.unit.columnSpacing" value="pixel"/>
	<property name="net.sf.jasperreports.export.xls.fit.width" value="1"/>
	<property name="net.sf.jasperreports.export.pdf.size.page.to.content" value="true"/>
	<property name="ireport.zoom" value="1.0"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<property name="net.sf.jasperreports.export.xls.font.size.fix.enabled" value="false"/>
	<property name="net.sf.jasperreports.export.xls.ignore.graphics" value="false"/>
	<property name="net.sf.jasperreports.export.xls.ignore.cell.border" value="false"/>
	<property name="com.jaspersoft.studio.data.defaultdataadapter" value="Local Func BI"/>
	<style name="Crosstab_CH" mode="Opaque" backcolor="#FFCC00">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab_CG" mode="Opaque" backcolor="#FFFFFF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab_CT" mode="Opaque" backcolor="#005FB3">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab_CD" mode="Opaque" backcolor="#FFFFFF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab 1_CH" mode="Opaque" backcolor="#F0F8FF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab 1_CG" mode="Opaque" backcolor="#BFE1FF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab 1_CT" mode="Opaque" backcolor="#005FB3">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab 1_CD" mode="Opaque" backcolor="#FFFFFF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab 3_CH" mode="Opaque" backcolor="#FFCC00">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab 3_CG" mode="Opaque" backcolor="#BFE1FF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab 3_CT" mode="Opaque" backcolor="#FFFFFF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<style name="Crosstab 3_CD" mode="Opaque" backcolor="#FFFFFF">
		<box>
			<pen lineWidth="0.5" lineColor="#000000"/>
			<topPen lineWidth="0.5" lineColor="#000000"/>
			<leftPen lineWidth="0.5" lineColor="#000000"/>
			<bottomPen lineWidth="0.5" lineColor="#000000"/>
			<rightPen lineWidth="0.5" lineColor="#000000"/>
		</box>
	</style>
	<subDataset name="commodity" uuid="6e035381-67bd-4f27-93f9-823a380721b1">
		<property name="com.jaspersoft.studio.data.defaultdataadapter" value="Local Func BI"/>
		<parameter name="cbk" class="java.lang.String"/>
		<parameter name="pc" class="java.lang.String"/>
		<parameter name="cmd" class="java.lang.String"/>
		<parameter name="shipmonth" class="java.lang.String"/>
		<parameter name="futterm" class="java.lang.String"/>
		<parameter name="LE_Filter" class="java.lang.String">
			<parameterDescription><![CDATA[]]></parameterDescription>
			<defaultValueExpression><![CDATA[' ']]></defaultValueExpression>
		</parameter>
		<parameter name="QSTR_Filter" class="java.lang.String" isForPrompting="false">
			<defaultValueExpression><![CDATA[" AND CONTRACT_BOOK IN ('" + $P{LE_Filter} + "')"]]></defaultValueExpression>
		</parameter>
		<parameter name="asofdate" class="java.util.Date"/>
		<parameter name="origindate" class="java.util.Date" isForPrompting="false">
			<defaultValueExpression><![CDATA[]]></defaultValueExpression>
		</parameter>
		<parameter name="col_group" class="java.lang.String"/>
		<parameter name="instrument_type" class="java.lang.String"/>
		<parameter name="QSTR_Filter_1" class="java.lang.String" isForPrompting="false">
			<defaultValueExpression><![CDATA[" AND w.CONTRACT_BOOK IN ('" + $P{LE_Filter} + "')"]]></defaultValueExpression>
		</parameter>
		<queryString>
			<![CDATA[SELECT	QTY
		,CONTRACT_BOOK
		,COMMODITY,CMD
		,POSITION_TYPE
		,FLAG
		,ORDERBY
		,POSITION
		,SHIP_MONTH
		,MONTHNUMBER
		,INS_TYPE,PROFIT_CENTER
FROM
(
SELECT SUM(QTY) QTY
		,CONTRACT_BOOK
		,COMMODITY,CMD
		,POSITION_TYPE
		,FLAG
		,ORDERBY
		,POSITION
		,CASE WHEN $P{col_group} = 'sm' THEN SHIP_MONTH
		 END AS SHIP_MONTH
		,CASE WHEN $P{col_group} = 'sm' THEN MONTHNUMBER
		 END AS MONTHNUMBER
		 ,CASE WHEN POSITION_TYPE = 'Futures' THEN 'Futures'
			WHEN POSITION_TYPE = 'Listed Options Delta' THEN 'Options'
			ELSE 'Physical'
		END AS INS_TYPE,PROFIT_CENTER
FROM
(
SELECT  QTY
		,CONTRACT_BOOK
		,COMMODITY,CMD
		,POSITION_TYPE
		,FLAG
		,ORDERBY
		,POSITION
		,SHIP_MONTH
		,SHIP_MONTH AS TERM_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
FROM
(
SELECT Sum(QUANTITY)                        AS QTY,
       w.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + MATERIAL_GROUP AS COMMODITY, MATERIAL_GROUP AS CMD,
       'Stock - Fixed Price'                AS POSITION_TYPE,
       0                                    AS FLAG,
       11                                   AS ORDERBY,
       'Origin Position'                    AS POSITION,
       CASE
         WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                        + '-'
                                                                                                                                        + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
       END                                  AS SHIP_MONTH,
       CASE
         WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
         ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
       END                                  AS MONTHNUMBER,
	   A.PROFIT_CENTER
FROM   DM_POSITION_DATA A
	JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like $P{cbk})w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT
WHERE  A.ORIGIN_DATA_TYPE = 'IV'
AND REPORT_DATE = $P{origindate}

AND MATERIAL_GROUP like $P{cmd}
AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
AND A.PROFIT_CENTER like $P{pc}
$P!{QSTR_Filter_1}
GROUP  BY CASE
            WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                           + '-'
                                                                                                                                           + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
          END,
          CASE
            WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
          END,
          MATERIAL_GROUP,
          w.CONTRACT_BOOK,
		  A.PROFIT_CENTER,
		  DELIVERY_MONTH_AND_YEAR
UNION ALL
SELECT 0                                        AS QTY,
       w.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + MATERIAL_GROUP     AS COMMODITY, MATERIAL_GROUP AS CMD,
       'Stock - Differential Price' AS POSITION_TYPE,
       0                                        AS FLAG,
       12                                       AS ORDERBY,
       'Origin Position'                        AS POSITION,
       CASE
         WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                        + '-'
                                                                                                                                        + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
       END                                      AS SHIP_MONTH,
       CASE
         WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
         ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
       END                                      AS MONTHNUMBER,
	   A.PROFIT_CENTER
FROM   DM_POSITION_DATA A
JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like $P{cbk})w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT
WHERE  A.ORIGIN_DATA_TYPE = 'IV'
AND REPORT_DATE = $P{origindate}

AND MATERIAL_GROUP like $P{cmd}
AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
AND A.PROFIT_CENTER like $P{pc}
$P!{QSTR_Filter_1}
GROUP  BY CASE
            WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                           + '-'
                                                                                                                                           + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
          END,
          CASE
            WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
          END,
          MATERIAL_GROUP,
          w.CONTRACT_BOOK,
		  A.PROFIT_CENTER,
		  DELIVERY_MONTH_AND_YEAR
UNION ALL
SELECT Sum(CASE
             WHEN A.ORIGIN_DATA_TYPE = 'PO' THEN QUANTITY
             ELSE -QUANTITY
           END)                             AS QTY,
       w.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + MATERIAL_GROUP AS COMMODITY, MATERIAL_GROUP AS CMD,
       CASE
         WHEN A.ORIGIN_DATA_TYPE = 'PO' THEN 'Purchase Contract - Fixed Price'
         ELSE 'Sales Contract - Fixed Price'
       END                                  AS POSITION_TYPE,
       0                                    AS FLAG,
       CASE
         WHEN A.ORIGIN_DATA_TYPE = 'PO' THEN 13
         ELSE 15
       END                                  AS ORDERBY,
       'Origin Position'                    AS POSITION,
       CASE
         WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
       END                                  AS SHIP_MONTH,
       CASE
         WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
       END                                  AS MONTHNUMBER,
	   A.PROFIT_CENTER
FROM   DM_POSITION_DATA A
	JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like $P{cbk})w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT
WHERE  PRICED_UNPRICED = 'Priced'
AND REPORT_DATE = $P{origindate}
       AND A.ORIGIN_DATA_TYPE IN ( 'PO', 'SO' )

AND MATERIAL_GROUP like $P{cmd}
AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
AND A.PROFIT_CENTER like $P{pc}
$P!{QSTR_Filter_1}
GROUP  BY CASE
            WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
          END,
          CASE
            WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
          END,
          MATERIAL_GROUP,
          A.ORIGIN_DATA_TYPE,
          w.CONTRACT_BOOK,
		  A.PROFIT_CENTER,
		  DELIVERY_MONTH_AND_YEAR
UNION ALL
SELECT Sum(CASE
             WHEN A.ORIGIN_DATA_TYPE = 'PO' THEN QUANTITY
             ELSE -QUANTITY
           END)                             AS QTY,
       w.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + MATERIAL_GROUP AS COMMODITY, MATERIAL_GROUP AS CMD,
       CASE
         WHEN A.ORIGIN_DATA_TYPE = 'PO' THEN 'Purchase Contract - Differential Price'
         ELSE 'Sales Contract - Differential Price'
       END                                  AS POSITION_TYPE,
       0                                    AS FLAG,
       CASE
         WHEN A.ORIGIN_DATA_TYPE = 'PO' THEN 14
         ELSE 16
       END                                  AS ORDERBY,
       'Origin Position'                    AS POSITION,
       CASE
         WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
       END                                  AS SHIP_MONTH,
       CASE
         WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
       END                                  AS MONTHNUMBER,
	   A.PROFIT_CENTER
FROM   DM_POSITION_DATA A
	JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like $P{cbk})w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT
WHERE  PRICED_UNPRICED = 'Unpriced'
AND REPORT_DATE = $P{origindate}
       AND A.ORIGIN_DATA_TYPE IN ( 'PO', 'SO' )

AND MATERIAL_GROUP like $P{cmd}
AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
AND A.PROFIT_CENTER like $P{pc}
$P!{QSTR_Filter_1}
GROUP  BY CASE
            WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
          END,
          CASE
            WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
          END,
          MATERIAL_GROUP,
          A.ORIGIN_DATA_TYPE,
          w.CONTRACT_BOOK,
		  A.PROFIT_CENTER,
		  DELIVERY_MONTH_AND_YEAR
UNION ALL
SELECT Sum(QTY)                        AS QTY,
       CONTRACT_BOOK,
       PROFIT_CENTER + ' ' + COMMODITY AS COMMODITY, COMMODITY AS CMD,
       NULL                            AS POSITION_TYPE,
       1                               AS FLAG,
       17                              AS ORDERBY,
       'Origin Position'               AS POSITION,
       SHIP_MONTH,
       MONTHNUMBER,
	   PROFIT_CENTER
FROM   (SELECT Sum(QUANTITY)  AS QTY,
               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                + '-'
                                                                                                                                                + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
			JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like $P{cbk})w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT
        WHERE  A.ORIGIN_DATA_TYPE = 'IV'
		AND REPORT_DATE = $P{origindate}

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                   + '-'
                                                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR
        UNION ALL
        SELECT Sum(CASE
                     WHEN A.ORIGIN_DATA_TYPE = 'PO' THEN QUANTITY
                     WHEN A.ORIGIN_DATA_TYPE = 'SO' THEN -QUANTITY
                   END)       AS QTY,
               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
			JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like $P{cbk})w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT
        WHERE  A.ORIGIN_DATA_TYPE IN ( 'PO', 'SO' )
		AND REPORT_DATE = $P{origindate}

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR)CTR
GROUP  BY SHIP_MONTH,
          MONTHNUMBER,
          COMMODITY,
          CONTRACT_BOOK,
		  PROFIT_CENTER
) T1
UNION ALL
SELECT DISTINCT 0                                    AS QTY,
                w.CONTRACT_BOOK     COLLATE DATABASE_DEFAULT                   AS CONTRACT_BOOK,
                A.PROFIT_CENTER + ' ' + MATERIAL_GROUP AS COMMODITY, MATERIAL_GROUP AS CMD,
                D.POSITION_TYPE,
                CASE
					WHEN D.POSITION_TYPE IS NULL THEN 1
					ELSE 0
				END                                  AS FLAG,
                D.ORDERBY,
                D.POSITION,
                CASE
                  WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                  ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                       + '-'
                       + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                END                                  AS SHIP_MONTH,
				CASE
                  WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                  ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                       + '-'
                       + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                END                                  AS TERM_MONTH,
                CASE
                  WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                  ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                END                                  AS MONTHNUMBER,
				A.PROFIT_CENTER
FROM   DM_POSITION_DATA A
       FULL JOIN (SELECT 'Origin Position'                 AS POSITION,
                         'Stock - Fixed Price'			   AS POSITION_TYPE,
                         11                                AS ORDERBY
                  UNION ALL
				  SELECT 'Origin Position'                 AS POSITION,
                         'Stock - Differential Price' AS POSITION_TYPE,
                         12                                AS ORDERBY
                  UNION ALL
				  SELECT 'Origin Position'                 AS POSITION,
                         'Purchase Contract - Fixed Price' AS POSITION_TYPE,
                         13                                AS ORDERBY
                  UNION ALL
                  SELECT 'Origin Position'              AS POSITION,
                         'Sales Contract - Fixed Price' AS POSITION_TYPE,
                         15                             AS ORDERBY
                  UNION ALL
                  SELECT 'Origin Position'                                    AS POSITION,
                         'Purchase Contract - Differential Price' AS POSITION_TYPE,
                         14                                                   AS ORDERBY
                  UNION ALL
                  SELECT 'Origin Position'                                 AS POSITION,
                         'Sales Contract - Differential Price' AS POSITION_TYPE,
                         16                                                AS ORDERBY
				  UNION ALL
				  SELECT 'Origin Position'       AS POSITION,
                         NULL					 AS POSITION_TYPE,
                         17                      AS ORDERBY) D
              ON 1 = 1
			  JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

WHERE  DELIVERY_MONTH_AND_YEAR IS NOT NULL

AND MATERIAL_GROUP like $P{cmd}
AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
$P!{QSTR_Filter_1}
--OIL Data
UNION ALL
--VISHAL for Profit Center
SELECT  SUM(QTY) QTY
		,CONTRACT_BOOK
		,COMMODITY, CMD
		,POSITION_TYPE
		,FLAG
		,ORDERBY
		,POSITION
		,SHIP_MONTH
		,SHIP_MONTH AS TERM_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
		FROM
		(
SELECT A.POSITION_ID,ISNULL(MAX(CASE
             WHEN ( PRICING_TYPE = 'PRICED'
                     OR ( PRICING_TYPE = 'UNPRICED'
                          AND A.ALLOCATION_ID <> A.PRICING_ID ) ) THEN
               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                            AS QTY,

       A.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       'Stock - Fixed Price'               AS POSITION_TYPE,
       0                                   AS FLAG,
       21                                  AS ORDERBY,
       'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
						--360748
			   ----360215 - Start
			   LEFT JOIN (
					--SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					--FROM
					--(
				SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY,X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID--, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID --AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End

WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--INVPOST AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_FIXED_PRICE_QTY > 0 )
--360215 - End
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'
                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'
																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,A.POSITION_ID
  ) T
		  GROUP BY CONTRACT_BOOK
		,COMMODITY,CMD
		,POSITION_TYPE
		,FLAG
		,ORDERBY
		,POSITION
		,SHIP_MONTH
		,SHIP_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
UNION ALL
SELECT ISNULL(SUM(CASE
             WHEN PRICING_TYPE = 'UNPRICED'
                  AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
                  AND BASIS_MARKET_PRICE_INDEX <> 'NA'
                  AND A.ALLOCATION_ID = A.PRICING_ID THEN
               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                                 AS QTY,

       A.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + A.COMMODITY      AS COMMODITY, COMMODITY AS CMD,
       'Stock - Differential Price' AS POSITION_TYPE,
       0                                        AS FLAG,
       22                                       AS ORDERBY,
       'OIL Position'                           AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,
	   A.PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		--360748
			   ----360215 - Start
			   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					FROM
					(
				--SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
				--	FROM
				--	(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_PROV_PRICE_QTY
							  X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End
WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_PROV_PRICE_QTY > 0 )
--AND NOT EXISTS (SELECT POSITION_ID FROM DAILY_PNL_REALIZATION B WHERE A.POSITION_ID = B.POSITION_ID)
--360215 - End
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'
                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'
																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH
UNION ALL
SELECT
			--Sum(CASE
   --          WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
   --          ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
   --        END)                            AS QTY,
				CASE WHEN B.TOTAL_FIXED_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN

				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY
					 ELSE -B.TOTAL_FIXED_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,
       A.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       CASE
         WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Fixed Price'
         ELSE 'Sales Contract - Fixed Price'
       END                                 AS POSITION_TYPE,
       0                                   AS FLAG,
       CASE
         WHEN A.LONG_SHORT = 'LONG' THEN 23
         ELSE 25
       END                                 AS ORDERBY,
       'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End

WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND ( PRICING_TYPE = 'PRICED'
              OR ( PRICING_TYPE = 'UNPRICED'
                   AND A.ALLOCATION_ID <> A.PRICING_ID ) )
				   AND CTR_TYPE <> 'PAPER'	-- by Vishal
				    --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,A.POSITION_ID,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_FIXED_PRICE_QTY,A.ALLOCATION_TYPE
UNION ALL
SELECT
			CASE WHEN B.TOTAL_PROV_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN
					Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
				   -
				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY
					 ELSE -B.TOTAL_PROV_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,




       A.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       CASE
         WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Differential Price'
         ELSE 'Sales Contract - Differential Price'
       END                                 AS POSITION_TYPE,
       0                                   AS FLAG,
       CASE
         WHEN A.LONG_SHORT = 'LONG' THEN 24
         ELSE 26
       END                                 AS ORDERBY,
       'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY
							  --X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End

WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND PRICING_TYPE = 'UNPRICED'
       AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
       AND BASIS_MARKET_PRICE_INDEX <> 'NA'
       AND A.ALLOCATION_ID = A.PRICING_ID
	   --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_PROV_PRICE_QTY,A.ALLOCATION_TYPE

UNION ALL
SELECT Sum(QTY)                        AS QTY,
       CONTRACT_BOOK,
       PROFIT_CENTER + ' ' + COMMODITY AS COMMODITY, COMMODITY AS CMD,
       NULL                            AS POSITION_TYPE,
       1                               AS FLAG,
       27                              AS ORDERBY,
       'OIL Position'                  AS POSITION,
       CTR.SHIP_MONTH,
	   CTR.TERM_MONTH,
       CTR.MONTHNUMBER,
	   CTR.PROFIT_CENTER
FROM   (
			SELECT  SUM(QTY) QTY
		,CONTRACT_BOOK
		,COMMODITY
		--,POSITION_TYPE
		--,FLAG
		--,ORDERBY
		--,POSITION
		,SHIP_MONTH
		,SHIP_MONTH AS TERM_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
		FROM
		(
SELECT A.POSITION_ID,ISNULL(MAX(CASE
             WHEN ( PRICING_TYPE = 'PRICED'
                     OR ( PRICING_TYPE = 'UNPRICED'
                          AND A.ALLOCATION_ID <> A.PRICING_ID ) ) THEN
               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                            AS QTY,

       A.CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       'Stock - Fixed Price'               AS POSITION_TYPE,
       0                                   AS FLAG,
       21                                  AS ORDERBY,
       'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
						--360748
			   ----360215 - Start
			   LEFT JOIN (
					--SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					--FROM
					--(
				SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY,X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID--, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID --AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End

WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--INVPOST AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_FIXED_PRICE_QTY > 0 )
--360215 - End
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'
                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'
																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,A.POSITION_ID
  ) T
		  GROUP BY CONTRACT_BOOK
		,COMMODITY
		--,POSITION_TYPE
		--,FLAG
		--,ORDERBY
		--,POSITION
		,SHIP_MONTH
		,SHIP_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
UNION ALL
SELECT ISNULL(SUM(CASE
             WHEN PRICING_TYPE = 'UNPRICED'
                  AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
                  AND BASIS_MARKET_PRICE_INDEX <> 'NA'
                  AND A.ALLOCATION_ID = A.PRICING_ID THEN

               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                                 AS QTY,
       A.CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY      AS COMMODITY,
       --'Stock - Differential Price' AS POSITION_TYPE,
       --0                                        AS FLAG,
       --22                                       AS ORDERBY,
       --'OIL Position'                           AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')


         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,

	   A.PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		--360748
			   ----360215 - Start
			   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					FROM
					(
				--SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
				--	FROM
				--	(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_PROV_PRICE_QTY
							  X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End
WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_PROV_PRICE_QTY > 0 )
--AND NOT EXISTS (SELECT POSITION_ID FROM DAILY_PNL_REALIZATION B WHERE A.POSITION_ID = B.POSITION_ID)
--360215 - End

AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE

            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'



                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)


            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'

                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,

		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'



																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)


			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE

            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')




            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,

          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --

		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH

UNION ALL
SELECT
			--Sum(CASE
   --          WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
   --          ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
   --        END)                            AS QTY,
				CASE WHEN B.TOTAL_FIXED_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN

				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY
					 ELSE -B.TOTAL_FIXED_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,
       A.CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Fixed Price'
       --  ELSE 'Sales Contract - Fixed Price'
       --END                                 AS POSITION_TYPE,
       --0                                   AS FLAG,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 23
       --  ELSE 25
       --END                                 AS ORDERBY,
       --'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End


WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND ( PRICING_TYPE = 'PRICED'
              OR ( PRICING_TYPE = 'UNPRICED'
                   AND A.ALLOCATION_ID <> A.PRICING_ID ) )
				   AND CTR_TYPE <> 'PAPER'	-- by Vishal
				    --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,A.POSITION_ID,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_FIXED_PRICE_QTY,A.ALLOCATION_TYPE
UNION ALL
SELECT

			CASE WHEN B.TOTAL_PROV_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN
					Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
				   -
				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY
					 ELSE -B.TOTAL_PROV_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,
       A.CONTRACT_BOOK,
	   A.COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Differential Price'
       --  ELSE 'Sales Contract - Differential Price'
       --END                                 AS POSITION_TYPE,
       --0                                   AS FLAG,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 24
       --  ELSE 26
       --END                                 AS ORDERBY,
       --'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1


         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,

	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY
							  --X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End


WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND PRICING_TYPE = 'UNPRICED'
       AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
       AND BASIS_MARKET_PRICE_INDEX <> 'NA'
       AND A.ALLOCATION_ID = A.PRICING_ID
	   --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE

            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'






            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'

                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,

		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'






			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE

            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1




            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,

          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --

		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_PROV_PRICE_QTY,A.ALLOCATION_TYPE


				  ) CTR
GROUP  BY CTR.COMMODITY,
          CTR.SHIP_MONTH,
		  CTR.TERM_MONTH,
          CTR.MONTHNUMBER,
          CTR.CONTRACT_BOOK,
		  CTR.PROFIT_CENTER
UNION ALL
SELECT DISTINCT 0                               AS QTY,
                CONTRACT_BOOK                   AS CONTRACT_BOOK,
                PROFIT_CENTER + ' ' + COMMODITY AS COMMODITY, COMMODITY AS CMD,
                D.POSITION_TYPE,
                CASE
				   WHEN D.POSITION_TYPE IS NULL THEN 1
				   ELSE 0
			    END     AS FLAG,
                D.ORDERBY,
                D.POSITION,
                CASE
                  WHEN COALESCE(PHYSICAL_DELIVERY_MONTHNUMBER, FUTURE_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                                   + '-'
                                                                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                  ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), COALESCE(PHYSICAL_DELIVERY_MONTH, FUTURE_DELIVERY_MONTH), 113), 8), 1)
                       + Lower(RIGHT(CONVERT(VARCHAR(3), COALESCE(PHYSICAL_DELIVERY_MONTH, FUTURE_DELIVERY_MONTH), 113), 2))
                       + '-'
                       + RIGHT(RIGHT(CONVERT(VARCHAR(11), COALESCE(PHYSICAL_DELIVERY_MONTH, FUTURE_DELIVERY_MONTH), 113), 8), 2)
                END                             AS SHIP_MONTH,
				CASE
				 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																														   + '-'
																														   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
				 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
					  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
					  + '-'
					  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
			   END                                      AS TERM_MONTH,
                CASE
                  WHEN COALESCE(PHYSICAL_DELIVERY_MONTHNUMBER, FUTURE_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
                  ELSE COALESCE(PHYSICAL_DELIVERY_MONTHNUMBER, FUTURE_DELIVERY_MONTHNUMBER)
                END                             AS MONTHNUMBER,
				PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       FULL JOIN (SELECT 'OIL Position'        AS POSITION,
                              'Stock - Fixed Price' AS POSITION_TYPE,
                              21                    AS ORDERBY
                       UNION ALL
                       SELECT 'OIL Position'                           AS POSITION,
                              'Stock - Differential Price' AS POSITION_TYPE,
                              22                                       AS ORDERBY
                       UNION ALL
                       SELECT 'OIL Position'                    AS POSITION,
                              'Purchase Contract - Fixed Price' AS POSITION_TYPE,
                              23                                AS ORDERBY
                       UNION ALL
                       SELECT 'OIL Position'                 AS POSITION,
                              'Sales Contract - Fixed Price' AS POSITION_TYPE,
                              25                             AS ORDERBY
                       UNION ALL
                       SELECT 'OIL Position'                                       AS POSITION,
                              'Purchase Contract - Differential Price' AS POSITION_TYPE,
                              24                                                   AS ORDERBY
                       UNION ALL
                       SELECT 'OIL Position'                                    AS POSITION,
                              'Sales Contract - Differential Price' AS POSITION_TYPE,
                              26                                                AS ORDERBY
                       UNION ALL
                       SELECT 'OIL Position' AS POSITION,
                              NULL           AS POSITION_TYPE,
                              27             AS ORDERBY
                       UNION ALL
                       SELECT 'Net Fixed Price Position' AS POSITION,
                              NULL                       AS POSITION_TYPE,
                              31                         AS ORDERBY
                       UNION ALL
                       SELECT 'Net Differential Price Position' AS POSITION,
                              NULL                              AS POSITION_TYPE,
                              32                                AS ORDERBY
                       UNION ALL
                       SELECT 'Net Derivatives Position' AS POSITION,
                              'Futures'                  AS POSITION_TYPE,
                              41                         AS ORDERBY
                       UNION ALL
                       SELECT 'Net Derivatives Position' AS POSITION,
                              'Listed Options Delta'     AS POSITION_TYPE,
                              42                         AS ORDERBY
                       UNION ALL
                       SELECT 'Net Derivatives Position' AS POSITION,
                              'Paper Trades'             AS POSITION_TYPE,
                              43                         AS ORDERBY
                       UNION ALL
                       SELECT 'Net Derivatives Position' AS POSITION,
                              NULL                       AS POSITION_TYPE,
                              44                         AS ORDERBY
                       UNION ALL
                       SELECT 'Outright Position' AS POSITION,
                              NULL                AS POSITION_TYPE,
                              51                  AS ORDERBY
                       UNION ALL
                       SELECT 'Basis Position (Balance to Buy/Sell)' AS POSITION,
                              NULL                                   AS POSITION_TYPE,
                              52                                     AS ORDERBY
                       UNION ALL
                       SELECT 'Structure Position' AS POSITION,
                              NULL                 AS POSITION_TYPE,
                              54                   AS ORDERBY
                       UNION ALL
                       SELECT 'Unpriced Position' AS POSITION,
                              NULL                AS POSITION_TYPE,
                              53                  AS ORDERBY) D
              ON 1 = 1
WHERE  COALESCE(PHYSICAL_DELIVERY_MONTHNUMBER, FUTURE_DELIVERY_MONTHNUMBER) IS NOT NULL
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND EOD_DATE=$P{asofdate}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
$P!{QSTR_Filter}
UNION ALL
SELECT Sum(QTY)                                AS QTY,
       CTR.CONTRACT_BOOK,
       CTR.PROFIT_CENTER + ' ' + CTR.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       NULL                                    AS POSITION_TYPE,
       1                                       AS FLAG,
       31                                      AS ORDERBY,
       'Net Fixed Price Position'              AS POSITION,
       CTR.SHIP_MONTH,
	   CTR.TERM_MONTH,
       CTR.MONTHNUMBER,
	   CTR.PROFIT_CENTER
FROM   (SELECT Sum(QUANTITY)  AS QTY,
               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                + '-'
                                                                                                                                                + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                + '-'
                                                                                                                                                + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END           AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE = 'IV'
		AND REPORT_DATE = $P{origindate}

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                   + '-'
                                                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                   + '-'
                                                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR

        UNION ALL
        SELECT Sum(CASE
                     WHEN LONG_SHORT = 'Long' THEN QUANTITY
                     ELSE -QUANTITY
                   END)       AS QTY,
               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE IN ( 'PO', 'SO' )
		AND REPORT_DATE = $P{origindate}
               AND PRICED_UNPRICED = 'Priced'

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR
        UNION ALL
        SELECT
			--Sum(CASE
   --          WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
   --          ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
   --        END)                            AS QTY,
				CASE WHEN B.TOTAL_FIXED_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN

				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY
					 ELSE -B.TOTAL_FIXED_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,
      A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Fixed Price'
       --  ELSE 'Sales Contract - Fixed Price'
       --END                                 AS POSITION_TYPE,
       --0                                   AS FLAG,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 23
       --  ELSE 25
       --END                                 AS ORDERBY,
       --'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End


WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND ( PRICING_TYPE = 'PRICED'
              OR ( PRICING_TYPE = 'UNPRICED'
                   AND A.ALLOCATION_ID <> A.PRICING_ID ) )
				   AND CTR_TYPE <> 'PAPER'	-- by Vishal
				    --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')

AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,A.POSITION_ID,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_FIXED_PRICE_QTY,A.ALLOCATION_TYPE
				  --360215-start
				  UNION ALL
				  SELECT  SUM(QTY) QTY
		,CONTRACT_BOOK
		,COMMODITY
		--,POSITION_TYPE
		--,FLAG
		--,ORDERBY
		--,POSITION
		,SHIP_MONTH
		,SHIP_MONTH AS TERM_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
		FROM
		(
SELECT A.POSITION_ID,ISNULL(MAX(CASE
             WHEN ( PRICING_TYPE = 'PRICED'
                     OR ( PRICING_TYPE = 'UNPRICED'
                          AND A.ALLOCATION_ID <> A.PRICING_ID ) ) THEN
               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                            AS QTY,

       A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
       COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       'Stock - Fixed Price'               AS POSITION_TYPE,
       0                                   AS FLAG,
       21                                  AS ORDERBY,
       'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
						--360748
			   ----360215 - Start
			   LEFT JOIN (
					--SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					--FROM
					--(
				SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY,X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID--, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID --AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End
WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--INVPOST AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_FIXED_PRICE_QTY > 0 )
--360215 - End
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'
                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'
																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,A.POSITION_ID
  ) T
		  GROUP BY CONTRACT_BOOK
		,COMMODITY
		--,POSITION_TYPE
		--,FLAG
		--,ORDERBY
		--,POSITION
		,SHIP_MONTH
		,SHIP_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER

				  --360215-end

				  ) CTR
GROUP  BY CTR.COMMODITY,
          CTR.SHIP_MONTH,
		  CTR.TERM_MONTH,
          CTR.MONTHNUMBER,
          CTR.CONTRACT_BOOK,
		  CTR.PROFIT_CENTER
UNION ALL
SELECT Sum(QTY)                                AS QTY,
       CTR.CONTRACT_BOOK,
       CTR.PROFIT_CENTER + ' ' + CTR.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       NULL                                    AS POSITION_TYPE,
       1                                       AS FLAG,
       32                                      AS ORDERBY,
       'Net Differential Price Position'       AS POSITION,
       CTR.SHIP_MONTH,
	   CTR.TERM_MONTH,
       CTR.MONTHNUMBER,
	   CTR.PROFIT_CENTER
FROM   (SELECT Sum(CASE
                     WHEN LONG_SHORT = 'Long' THEN QUANTITY
                     ELSE -QUANTITY
                   END)       AS QTY,
               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE IN ( 'PO', 'SO' )
		AND REPORT_DATE = $P{origindate}
               AND PRICED_UNPRICED = 'Unpriced'

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR
        UNION ALL
			--360215 Start

			SELECT ISNULL(SUM(CASE
             WHEN PRICING_TYPE = 'UNPRICED'
                  AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
                  AND BASIS_MARKET_PRICE_INDEX <> 'NA'
                  AND A.ALLOCATION_ID = A.PRICING_ID THEN





               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                                 AS QTY,
       A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY      AS COMMODITY,
       --'Stock - Differential Price' AS POSITION_TYPE,
       --0                                        AS FLAG,
       --22                                       AS ORDERBY,
       --'OIL Position'                           AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'



                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)


         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'

              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,

	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'



                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)


         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'

              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,

       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')




         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,

	   A.PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		--360748
			   ----360215 - Start
			   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					FROM
					(
				--SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
				--	FROM
				--	(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_PROV_PRICE_QTY
							  X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End
WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_PROV_PRICE_QTY > 0 )
--AND NOT EXISTS (SELECT POSITION_ID FROM DAILY_PNL_REALIZATION B WHERE A.POSITION_ID = B.POSITION_ID)
--360215 - End

AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE

            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'



                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)


            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'

                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,

		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'
																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH
UNION ALL
SELECT

			CASE WHEN B.TOTAL_PROV_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN
					Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
				   -
				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY
					 ELSE -B.TOTAL_PROV_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,
       A.CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Differential Price'
       --  ELSE 'Sales Contract - Differential Price'
       --END                                 AS POSITION_TYPE,
       --0                                   AS FLAG,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 24
       --  ELSE 26
       --END                                 AS ORDERBY,
       --'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'

              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'


         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'

              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,

       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY
							  --X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End


WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND PRICING_TYPE = 'UNPRICED'
       AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
       AND BASIS_MARKET_PRICE_INDEX <> 'NA'
       AND A.ALLOCATION_ID = A.PRICING_ID
	   --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE

			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1


            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,

          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --

		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_PROV_PRICE_QTY,A.ALLOCATION_TYPE
			--360215 End


				  ) CTR
GROUP  BY CTR.COMMODITY,
          CTR.SHIP_MONTH,
		  CTR.TERM_MONTH,
          CTR.MONTHNUMBER,
          CTR.CONTRACT_BOOK,
		  CTR.PROFIT_CENTER
UNION ALL
SELECT Sum(CASE
             WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
             ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
           END)                            AS QTY,
       A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       'Futures'                           AS POSITION_TYPE,
       0                                   AS FLAG,
       41                                  AS ORDERBY,
       'Net Derivatives Position'          AS POSITION,
       CASE
         WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE FUTURE_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   A.PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
WHERE  A.INSTRUMENT_TYPE = 'FUTURES'
AND EOD_DATE  = $P{asofdate}
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND FUTURE_DELIVERY_MONTH LIKE $P{shipmonth}
AND CTR.CONTRACT_TERM LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
            WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
          END,
          CASE
            WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE FUTURE_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  A.PROFIT_CENTER,
		  				 --
				  FUTURE_DELIVERY_MONTHNUMBER,
				  FUTURE_DELIVERY_MONTH
UNION ALL
SELECT Sum(CASE
             WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * CURRENT_DELTA * UOM_FACTOR_FROM_POS_TO_RPT )
             ELSE -( CURRENT_OPEN_QUANTITY * CURRENT_DELTA * UOM_FACTOR_FROM_POS_TO_RPT )
           END)                            AS QTY,
       A.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       'Listed Options Delta'              AS POSITION_TYPE,
       0                                   AS FLAG,
       42                                  AS ORDERBY,
       'Net Derivatives Position'          AS POSITION,
       CASE
         WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE OPTION_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	  A.PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
WHERE  A.INSTRUMENT_TYPE = 'OPTIONS'
AND EOD_DATE  = $P{asofdate}
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND OPTION_DELIVERY_MONTH LIKE $P{shipmonth}
AND CTR.CONTRACT_TERM LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
            WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
          END,
          CASE
            WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE OPTION_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  A.PROFIT_CENTER,
		  OPTION_DELIVERY_MONTHNUMBER,
		  OPTION_DELIVERY_MONTH
UNION ALL
SELECT Sum(CASE
             WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
             ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
           END)                            AS QTY,
       A.CONTRACT_BOOK,
       A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       'Paper Trades'                      AS POSITION_TYPE,
       0                                   AS FLAG,
       43                                  AS ORDERBY,
       'Net Derivatives Position'          AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   A.PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND LONG_SHORT = 'LONG'
       AND A.ALLOCATION_TYPE <> 'STOCK'
       AND CTR_TYPE = 'PAPER'
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  A.PROFIT_CENTER,
		  			--
			PHYSICAL_DELIVERY_MONTHNUMBER,
			PHYSICAL_DELIVERY_MONTH,
			FUTURE_DELIVERY_MONTHNUMBER,
			FUTURE_DELIVERY_MONTH
UNION ALL
SELECT Sum(QTY)                                AS QTY,
       CTR.CONTRACT_BOOK,
       CTR.PROFIT_CENTER + ' ' + CTR.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       NULL                                    AS POSITION_TYPE,
       1                                       AS FLAG,
       44                                      AS ORDERBY,
       'Net Derivatives Position'              AS POSITION,
       CTR.SHIP_MONTH,
	   CTR.TERM_MONTH,
       CTR.MONTHNUMBER,
	   CTR.PROFIT_CENTER
FROM   (SELECT Sum(CASE
                     WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                     ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                   END) AS QTY,
               A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
               A.COMMODITY,
               CASE
                 WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
               END      AS SHIP_MONTH,
			   CASE
                 WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
               END      AS TERM_MONTH,
               CASE
                 WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE FUTURE_DELIVERY_MONTHNUMBER
               END      AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DAILY_PNL_ATTRIBUTION A
               LEFT JOIN DAILY_CONTRACT_DATA CTR
                      ON A.POSITION_ID = CTR.POSITION_ID
        WHERE  A.INSTRUMENT_TYPE = 'FUTURES'
		AND ($P{instrument_type} = 'Futures' or $P{instrument_type} = '%')
		AND EOD_DATE  = $P{asofdate}
        AND CONTRACT_BOOK like $P{cbk}
        AND COMMODITY like $P{cmd}
        AND PROFIT_CENTER like $P{pc}
        AND FUTURE_DELIVERY_MONTH LIKE $P{shipmonth}
        AND CTR.CONTRACT_TERM LIKE $P{futterm}
        $P!{QSTR_Filter}
        GROUP  BY A.COMMODITY,
                  CASE
                    WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
                  END,
				  CASE
                    WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
                  END,
                  CASE
                    WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE FUTURE_DELIVERY_MONTHNUMBER
                  END,
                  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  FUTURE_DELIVERY_MONTHNUMBER,
				  FUTURE_DELIVERY_MONTH
        UNION ALL
        SELECT Sum(CASE
                     WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * CURRENT_DELTA * UOM_FACTOR_FROM_POS_TO_RPT )
                     ELSE -( CURRENT_OPEN_QUANTITY * CURRENT_DELTA * UOM_FACTOR_FROM_POS_TO_RPT )
                   END) AS QTY,
               A.CONTRACT_BOOK,
               A.COMMODITY,
               CASE
                 WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
               END      AS SHIP_MONTH,
			   CASE
                 WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
               END      AS TERM_MONTH,
               CASE
                 WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE OPTION_DELIVERY_MONTHNUMBER
               END      AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DAILY_PNL_ATTRIBUTION A
               LEFT JOIN DAILY_CONTRACT_DATA CTR
                      ON A.POSITION_ID = CTR.POSITION_ID
        WHERE  A.INSTRUMENT_TYPE = 'OPTIONS'
		AND ($P{instrument_type} = 'Options' or $P{instrument_type} = '%')
		AND EOD_DATE  = $P{asofdate}
        AND CONTRACT_BOOK like $P{cbk}
        AND COMMODITY like $P{cmd}
        AND PROFIT_CENTER like $P{pc}
        AND OPTION_DELIVERY_MONTH LIKE $P{shipmonth}
        AND CTR.CONTRACT_TERM LIKE $P{futterm}
        $P!{QSTR_Filter}
        GROUP  BY A.COMMODITY,
                  CASE
                    WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
                  END,
				  CASE
                    WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
                  END,
                  CASE
                    WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE OPTION_DELIVERY_MONTHNUMBER
                  END,
                  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  OPTION_DELIVERY_MONTHNUMBER,
				  OPTION_DELIVERY_MONTH
        UNION ALL
        SELECT --Sum(( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )) AS QTY,
				Sum(CASE
						WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
						ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					END)                            AS QTY,
               A.CONTRACT_BOOK,
               A.COMMODITY,
               CASE
                 WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
               END                                                         AS SHIP_MONTH,
			   CASE
				 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
				 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
					  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
					  + '-'
					  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
			   END                                 AS TERM_MONTH,
               CASE
                 WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE PHYSICAL_DELIVERY_MONTHNUMBER
               END                                                         AS MONTHNUMBER,
			   PROFIT_CENTER
        FROM   DAILY_PNL_ATTRIBUTION A
               LEFT JOIN DAILY_CONTRACT_DATA CTR
                      ON A.POSITION_ID = CTR.POSITION_ID
        WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
		AND EOD_DATE  = $P{asofdate}
               --AND LONG_SHORT = 'LONG'
               AND A.ALLOCATION_TYPE <> 'STOCK'
               AND CTR_TYPE = 'PAPER'
        AND CONTRACT_BOOK like $P{cbk}
        AND COMMODITY like $P{cmd}
        AND PROFIT_CENTER like $P{pc}
        AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
        AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
        $P!{QSTR_Filter}
        GROUP  BY A.COMMODITY,
                  CASE
                    WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
                  END,
				  CASE
					 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
					 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
						  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
						  + '-'
						  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
				   END,
                  CASE
                    WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE PHYSICAL_DELIVERY_MONTHNUMBER
                  END,
                  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  				 --
				  PHYSICAL_DELIVERY_MONTHNUMBER,
				  PHYSICAL_DELIVERY_MONTH,
				  FUTURE_DELIVERY_MONTHNUMBER,
				  FUTURE_DELIVERY_MONTH) CTR
GROUP  BY CTR.COMMODITY,
          CTR.SHIP_MONTH,
		  CTR.TERM_MONTH,
          CTR.MONTHNUMBER,
          CTR.CONTRACT_BOOK,
		  CTR.PROFIT_CENTER
UNION ALL
SELECT Sum(QTY)                                AS QTY,
       CTR.CONTRACT_BOOK,
       CTR.PROFIT_CENTER + ' ' + CTR.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       NULL                                    AS POSITION_TYPE,
       1                                       AS FLAG,
       51                                      AS ORDERBY,
       'Outright Position'                     AS POSITION,
       CTR.SHIP_MONTH,
	   CTR.TERM_MONTH,
       CTR.MONTHNUMBER,
	   CTR.PROFIT_CENTER
FROM   (SELECT Sum(CASE
                     WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                     ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                   END) AS QTY,
               A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
               A.COMMODITY,
               CASE
                 WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
               END      AS SHIP_MONTH,
			   CASE
                 WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
               END      AS TERM_MONTH,
               CASE
                 WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE FUTURE_DELIVERY_MONTHNUMBER
               END      AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DAILY_PNL_ATTRIBUTION A
               LEFT JOIN DAILY_CONTRACT_DATA CTR
                      ON A.POSITION_ID = CTR.POSITION_ID
        WHERE  A.INSTRUMENT_TYPE = 'FUTURES'
		AND ($P{instrument_type} = 'Futures' OR $P{instrument_type} = '%')
		AND EOD_DATE  = $P{asofdate}
        AND CONTRACT_BOOK like $P{cbk}
        AND COMMODITY like $P{cmd}
        AND PROFIT_CENTER like $P{pc}
        AND FUTURE_DELIVERY_MONTH LIKE $P{shipmonth}
        AND CTR.CONTRACT_TERM LIKE $P{futterm}
        $P!{QSTR_Filter}
        GROUP  BY A.COMMODITY,
                  CASE
                    WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
                  END,
				  CASE
                    WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
                  END,
                  CASE
                    WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE FUTURE_DELIVERY_MONTHNUMBER
                  END,
                  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  				 --
				  FUTURE_DELIVERY_MONTHNUMBER,
				  FUTURE_DELIVERY_MONTH
        UNION ALL
        SELECT Sum(CASE
                     WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * CURRENT_DELTA * UOM_FACTOR_FROM_POS_TO_RPT )
                     ELSE -( CURRENT_OPEN_QUANTITY * CURRENT_DELTA * UOM_FACTOR_FROM_POS_TO_RPT )
                   END) AS QTY,
               A.CONTRACT_BOOK,
               A.COMMODITY,
               CASE
                 WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
               END      AS SHIP_MONTH,
			   CASE
                 WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
               END      AS TERM_MONTH,
               CASE
                 WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE OPTION_DELIVERY_MONTHNUMBER
               END      AS MONTHNUMBER,
			   PROFIT_CENTER
        FROM   DAILY_PNL_ATTRIBUTION A
               LEFT JOIN DAILY_CONTRACT_DATA CTR
                      ON A.POSITION_ID = CTR.POSITION_ID
        WHERE  A.INSTRUMENT_TYPE = 'OPTIONS'
			AND ($P{instrument_type} = 'Options' OR $P{instrument_type} = '%')
		AND EOD_DATE  = $P{asofdate}
        AND CONTRACT_BOOK like $P{cbk}
        AND COMMODITY like $P{cmd}
        AND PROFIT_CENTER like $P{pc}
        AND OPTION_DELIVERY_MONTH LIKE $P{shipmonth}
        AND CTR.CONTRACT_TERM LIKE $P{futterm}
        $P!{QSTR_Filter}
        GROUP  BY A.COMMODITY,
                  CASE
                    WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
                  END,
				  CASE
                    WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
                  END,
                  CASE
                    WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE OPTION_DELIVERY_MONTHNUMBER
                  END,
                  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  				 --
				  OPTION_DELIVERY_MONTHNUMBER,
				  OPTION_DELIVERY_MONTH
        UNION ALL
        SELECT --Sum(( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )) AS QTY,
				Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)                            AS QTY,
               A.CONTRACT_BOOK,
               A.COMMODITY,
               CASE
                 WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
               END                                                         AS SHIP_MONTH,
			   CASE
				 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
				 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
					  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
					  + '-'
					  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
			   END                                 AS TERM_MONTH,
               CASE
                 WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE PHYSICAL_DELIVERY_MONTHNUMBER
               END                                                         AS MONTHNUMBER,
			   PROFIT_CENTER
        FROM   DAILY_PNL_ATTRIBUTION A
               LEFT JOIN DAILY_CONTRACT_DATA CTR
                      ON A.POSITION_ID = CTR.POSITION_ID
        WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
		AND EOD_DATE  = $P{asofdate}
               --AND LONG_SHORT = 'LONG'
               --AND A.ALLOCATION_TYPE <> 'STOCK'
               AND CTR_TYPE = 'PAPER'
        AND CONTRACT_BOOK like $P{cbk}
        AND COMMODITY like $P{cmd}
        AND PROFIT_CENTER like $P{pc}
        AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
        AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
        $P!{QSTR_Filter}
        GROUP  BY A.COMMODITY,
                  CASE
                    WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
                  END,
				  CASE
					 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
					 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
						  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
						  + '-'
						  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
				   END ,
                  CASE
                    WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE PHYSICAL_DELIVERY_MONTHNUMBER
                  END,
                  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  				 --
				  PHYSICAL_DELIVERY_MONTHNUMBER,
				  PHYSICAL_DELIVERY_MONTH,
				  FUTURE_DELIVERY_MONTHNUMBER,
				  FUTURE_DELIVERY_MONTH
        UNION ALL
		--Net Fixed Price 360215 - Start
		SELECT Sum(QUANTITY)  AS QTY,
               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                + '-'
                                                                                                                                                + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                + '-'
                                                                                                                                                + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END           AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE = 'IV'
		AND REPORT_DATE = $P{origindate}

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE


                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                   + '-'
                                                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                   + '-'
                                                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR

        UNION ALL
        SELECT Sum(CASE
                     WHEN LONG_SHORT = 'Long' THEN QUANTITY
                     ELSE -QUANTITY

                   END)       AS QTY,
               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE IN ( 'PO', 'SO' )
		AND REPORT_DATE = $P{origindate}
               AND PRICED_UNPRICED = 'Priced'

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR
        UNION ALL
        SELECT
			--Sum(CASE
   --          WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
   --          ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
   --        END)                            AS QTY,
				CASE WHEN B.TOTAL_FIXED_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN

				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY
					 ELSE -B.TOTAL_FIXED_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,
       A.CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Fixed Price'
       --  ELSE 'Sales Contract - Fixed Price'
       --END                                 AS POSITION_TYPE,
       --0                                   AS FLAG,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 23
       --  ELSE 25
       --END                                 AS ORDERBY,
       --'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End


WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND ( PRICING_TYPE = 'PRICED'
              OR ( PRICING_TYPE = 'UNPRICED'
                   AND A.ALLOCATION_ID <> A.PRICING_ID ) )
				   AND CTR_TYPE <> 'PAPER'	-- by Vishal
				   --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,A.POSITION_ID,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_FIXED_PRICE_QTY,A.ALLOCATION_TYPE
				  --360215-start
				  UNION ALL
				  SELECT  SUM(QTY) QTY
		,CONTRACT_BOOK
		,COMMODITY
		--,POSITION_TYPE
		--,FLAG
		--,ORDERBY
		--,POSITION
		,SHIP_MONTH
		,SHIP_MONTH AS TERM_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
		FROM
		(
SELECT A.POSITION_ID,ISNULL(MAX(CASE
             WHEN ( PRICING_TYPE = 'PRICED'
                     OR ( PRICING_TYPE = 'UNPRICED'
                          AND A.ALLOCATION_ID <> A.PRICING_ID ) ) THEN
               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                            AS QTY,

       A.CONTRACT_BOOK,
       COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       'Stock - Fixed Price'               AS POSITION_TYPE,
       0                                   AS FLAG,
       21                                  AS ORDERBY,
       'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
						--360748
			   ----360215 - Start
			   LEFT JOIN (
					--SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					--FROM
					--(
				SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY,X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID--, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID --AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End

WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--INVPOST AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_FIXED_PRICE_QTY > 0 )
--360215 - End
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'
                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'
																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,A.POSITION_ID
  ) T
		  GROUP BY CONTRACT_BOOK
		,COMMODITY
		--,POSITION_TYPE
		--,FLAG
		--,ORDERBY
		--,POSITION
		,SHIP_MONTH
		,SHIP_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
		--Net Fixed Price 360215 - End

  --Removed Unpriced Section
				  ) CTR
GROUP  BY CTR.COMMODITY,
          CTR.SHIP_MONTH,
		  CTR.TERM_MONTH,
          CTR.MONTHNUMBER,
          CTR.CONTRACT_BOOK,
		  CTR.PROFIT_CENTER
UNION ALL
SELECT Sum(QTY)                                AS QTY,
       CTR.CONTRACT_BOOK,
       CTR.PROFIT_CENTER + ' ' + CTR.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       NULL                                    AS POSITION_TYPE,
       1                                       AS FLAG,
       52                                      AS ORDERBY,
       'Basis Position (Balance to Buy/Sell)'  AS POSITION,
       CTR.SHIP_MONTH,
	   CTR.TERM_MONTH,
       CTR.MONTHNUMBER,
	   CTR.PROFIT_CENTER
FROM   (

		--Net Fixed Price 360215 - Start
		SELECT Sum(QUANTITY)  AS QTY,

               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                + '-'
                                                                                                                                                + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                + '-'
                                                                                                                                                + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END           AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE = 'IV'
		AND REPORT_DATE = $P{origindate}

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                   + '-'
                                                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                                                   + '-'
                                                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR

        UNION ALL
        SELECT Sum(CASE
                     WHEN LONG_SHORT = 'Long' THEN QUANTITY
                     ELSE -QUANTITY

                   END)       AS QTY,
               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE IN ( 'PO', 'SO' )
		AND REPORT_DATE = $P{origindate}
               AND PRICED_UNPRICED = 'Priced'

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR
        UNION ALL
        SELECT
--SELECT Sum(CASE
--             WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
--             ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
--           END)                            AS QTY,
			CASE WHEN B.TOTAL_FIXED_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN

				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY
					 ELSE -B.TOTAL_FIXED_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,
       A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Fixed Price'
       --  ELSE 'Sales Contract - Fixed Price'
       --END                                 AS POSITION_TYPE,
       --0                                   AS FLAG,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 23
       --  ELSE 25
       --END                                 AS ORDERBY,
       --'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End


WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND ( PRICING_TYPE = 'PRICED'
              OR ( PRICING_TYPE = 'UNPRICED'
                   AND A.ALLOCATION_ID <> A.PRICING_ID ) )
				   AND CTR_TYPE <> 'PAPER'	-- by Vishal
				   --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,A.POSITION_ID,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_FIXED_PRICE_QTY,A.ALLOCATION_TYPE
				  --360215-start
				  UNION ALL
				  SELECT  SUM(QTY) QTY
		,CONTRACT_BOOK
		,COMMODITY
		--,POSITION_TYPE
		--,FLAG
		--,ORDERBY
		--,POSITION
		,SHIP_MONTH
		,SHIP_MONTH AS TERM_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
		FROM
		(
SELECT A.POSITION_ID,ISNULL(MAX(CASE
             WHEN ( PRICING_TYPE = 'PRICED'
                     OR ( PRICING_TYPE = 'UNPRICED'
                          AND A.ALLOCATION_ID <> A.PRICING_ID ) ) THEN
               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_FIXED_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                            AS QTY,

       A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
       COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       'Stock - Fixed Price'               AS POSITION_TYPE,
       0                                   AS FLAG,
       21                                  AS ORDERBY,
       'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
						--360748
			   ----360215 - Start
			   LEFT JOIN (
					--SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					--FROM
					--(
				SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY,X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID--, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID --AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End

WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--INVPOST AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_FIXED_PRICE_QTY > 0 )
--360215 - End
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'
                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'
																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,A.POSITION_ID
  ) T
		  GROUP BY CONTRACT_BOOK
		,COMMODITY
		--,POSITION_TYPE
		--,FLAG
		--,ORDERBY
		--,POSITION
		,SHIP_MONTH
		,SHIP_MONTH
		,MONTHNUMBER
		,PROFIT_CENTER
		--Net Fixed Price 360215 - End
        UNION ALL
		--Net Differentials 360215 - Start
		SELECT Sum(CASE
                     WHEN LONG_SHORT = 'Long' THEN QUANTITY
                     ELSE -QUANTITY
                   END)       AS QTY,

               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,

               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'






                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)

                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'






                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)

                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,






			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE IN ( 'PO', 'SO' )




		AND REPORT_DATE = $P{origindate}
               AND PRICED_UNPRICED = 'Unpriced'






        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}

        AND A.PROFIT_CENTER like $P{pc}


        $P!{QSTR_Filter_1}
        GROUP  BY CASE


                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'

                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'




                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)

                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,













                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')





                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR
        UNION ALL
			--360215 Start
			SELECT ISNULL(SUM(CASE
             WHEN PRICING_TYPE = 'UNPRICED'
                  AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
                  AND BASIS_MARKET_PRICE_INDEX <> 'NA'
                  AND A.ALLOCATION_ID = A.PRICING_ID THEN
               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                                 AS QTY,
       A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY      AS COMMODITY,
       --'Stock - Differential Price' AS POSITION_TYPE,
       --0                                        AS FLAG,
       --22                                       AS ORDERBY,
       --'OIL Position'                           AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'
                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,
	   A.PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		--360748
			   ----360215 - Start
			   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					FROM
					(
				--SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
				--	FROM
				--	(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_PROV_PRICE_QTY
							  X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End
WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_PROV_PRICE_QTY > 0 )
--AND NOT EXISTS (SELECT POSITION_ID FROM DAILY_PNL_REALIZATION B WHERE A.POSITION_ID = B.POSITION_ID)
--360215 - End
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'
                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'
																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH
UNION ALL
SELECT
			CASE WHEN B.TOTAL_PROV_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN
					Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
				   -
				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY
					 ELSE -B.TOTAL_PROV_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,
       A.CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Differential Price'
       --  ELSE 'Sales Contract - Differential Price'
       --END                                 AS POSITION_TYPE,
       --0                                   AS FLAG,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 24
       --  ELSE 26
       --END                                 AS ORDERBY,
       --'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY
							  --X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End


WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND PRICING_TYPE = 'UNPRICED'
       AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
       AND BASIS_MARKET_PRICE_INDEX <> 'NA'
       AND A.ALLOCATION_ID = A.PRICING_ID
	   --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_PROV_PRICE_QTY,A.ALLOCATION_TYPE
		--Net Differentials 360215 - End





				  )CTR
GROUP  BY CTR.COMMODITY,
          CTR.SHIP_MONTH,
		  CTR.TERM_MONTH,
          CTR.MONTHNUMBER,
          CTR.CONTRACT_BOOK,
		  CTR.PROFIT_CENTER
UNION ALL
SELECT Sum(QTY)                        AS QTY,
       CONTRACT_BOOK,
       PROFIT_CENTER + ' ' + COMMODITY AS COMMODITY, COMMODITY AS CMD,
       NULL                            AS POSITION_TYPE,
       1                               AS FLAG,
       53                              AS ORDERBY,
       'Unpriced Position'             AS POSITION,
       SHIP_MONTH,
	   TERM_MONTH,
       MONTHNUMBER,
	   PROFIT_CENTER
FROM   (SELECT COMMODITY,
               A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
               Sum(CASE
                     WHEN LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                     ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                   END) AS QTY,
               CASE
                 WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
               END      AS SHIP_MONTH,
			   CASE
				 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
				 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
					  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
					  + '-'
					  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
			   END                                 AS TERM_MONTH,
               CASE
                 WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE PHYSICAL_DELIVERY_MONTHNUMBER
               END      AS MONTHNUMBER,
			   PROFIT_CENTER
        FROM   DAILY_PNL_ATTRIBUTION A
               LEFT JOIN DAILY_CONTRACT_DATA CTR
                      ON A.POSITION_ID = CTR.POSITION_ID
        WHERE  PRICING_TYPE = 'UNPRICED'
		AND EOD_DATE  = $P{asofdate}
               AND A.INSTRUMENT_TYPE = 'PHYSICAL'
               AND ( BASIS_MARKET_PRICE_INDEX IS NULL
                      OR BASIS_MARKET_PRICE_INDEX = 'NA' )
               AND ALLOCATION_ID = PRICING_ID
        AND CONTRACT_BOOK like $P{cbk}
        AND COMMODITY like $P{cmd}
        AND PROFIT_CENTER like $P{pc}
        AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
        AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
        $P!{QSTR_Filter}
        GROUP  BY A.COMMODITY,
                  CASE
                    WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
                  END,
				  CASE
					 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
					 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
						  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
						  + '-'
						  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
				   END,
                  CASE
                    WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE PHYSICAL_DELIVERY_MONTHNUMBER
                  END,
                  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  				 --
				  PHYSICAL_DELIVERY_MONTHNUMBER,
				  PHYSICAL_DELIVERY_MONTH,
				  FUTURE_DELIVERY_MONTHNUMBER,
				  FUTURE_DELIVERY_MONTH
        UNION ALL
        SELECT MATERIAL_GROUP AS COMMODITY,
               w.CONTRACT_BOOK,
               Sum(CASE
                     WHEN A.ORIGIN_DATA_TYPE = 'SO' THEN -QUANTITY
                     ELSE QUANTITY
                   END)       AS QTY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE IN ( 'IV', 'PO', 'SO' )
		AND REPORT_DATE = $P{origindate}
               AND PRICED_UNPRICED = 'Unpriced'

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR) CTR
GROUP  BY CTR.COMMODITY,
          CTR.SHIP_MONTH,
		  CTR.TERM_MONTH,
          CTR.MONTHNUMBER,
          CTR.CONTRACT_BOOK,
		  CTR.PROFIT_CENTER
UNION ALL
SELECT Sum(QTY)                                AS QTY,
       CTR.CONTRACT_BOOK,
       CTR.PROFIT_CENTER + ' ' + CTR.COMMODITY AS COMMODITY, COMMODITY AS CMD,
       NULL                                    AS POSITION_TYPE,
       1                                       AS FLAG,
       54                                      AS ORDERBY,
       'Structure Position'                    AS POSITION,
       CTR.SHIP_MONTH,
	   CTR.TERM_MONTH,
       CTR.MONTHNUMBER,
	   CTR.PROFIT_CENTER
FROM   (SELECT Sum(CASE
                     WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                     ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                   END) AS QTY,
               A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
               A.COMMODITY,
               CASE
                 WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
               END      AS SHIP_MONTH,
			   CASE
                 WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
               END      AS TERM_MONTH,
               CASE
                 WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE FUTURE_DELIVERY_MONTHNUMBER
               END      AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DAILY_PNL_ATTRIBUTION A
               LEFT JOIN DAILY_CONTRACT_DATA CTR
                      ON A.POSITION_ID = CTR.POSITION_ID
        WHERE  A.INSTRUMENT_TYPE = 'FUTURES'
				AND ($P{instrument_type} = 'Futures' OR $P{instrument_type} = '%')
		AND EOD_DATE  = $P{asofdate}
        AND CONTRACT_BOOK like $P{cbk}
        AND COMMODITY like $P{cmd}
        AND PROFIT_CENTER like $P{pc}
        AND FUTURE_DELIVERY_MONTH LIKE $P{shipmonth}
        AND CTR.CONTRACT_TERM LIKE $P{futterm}
        $P!{QSTR_Filter}
        GROUP  BY A.COMMODITY,
                  CASE
                    WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
                  END,
				  CASE
                    WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), FUTURE_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), FUTURE_DELIVERY_MONTH, 113), 8), 2)
                  END,
                  CASE
                    WHEN FUTURE_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE FUTURE_DELIVERY_MONTHNUMBER
                  END,
                  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  FUTURE_DELIVERY_MONTHNUMBER,
				  FUTURE_DELIVERY_MONTH
        UNION ALL
        SELECT Sum(CASE
                     WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * CURRENT_DELTA * UOM_FACTOR_FROM_POS_TO_RPT )
                     ELSE -( CURRENT_OPEN_QUANTITY * CURRENT_DELTA * UOM_FACTOR_FROM_POS_TO_RPT )
                   END) AS QTY,
               A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
               A.COMMODITY,
               CASE
                 WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
               END      AS SHIP_MONTH,
			   CASE
                 WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                      + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
               END      AS TERM_MONTH,
               CASE
                 WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE OPTION_DELIVERY_MONTHNUMBER
               END      AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DAILY_PNL_ATTRIBUTION A
               LEFT JOIN DAILY_CONTRACT_DATA CTR
                      ON A.POSITION_ID = CTR.POSITION_ID
        WHERE  A.INSTRUMENT_TYPE = 'OPTIONS'
				AND ($P{instrument_type} = 'Options' OR $P{instrument_type} = '%')
		AND EOD_DATE  = $P{asofdate}
        AND CONTRACT_BOOK like $P{cbk}
        AND COMMODITY like $P{cmd}
        AND PROFIT_CENTER like $P{pc}
        AND OPTION_DELIVERY_MONTH LIKE $P{shipmonth}
        AND CTR.CONTRACT_TERM LIKE $P{futterm}
        $P!{QSTR_Filter}
        GROUP  BY A.COMMODITY,
                  CASE
                    WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
                  END,
				  CASE
                    WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 1)
                         + Lower(RIGHT(CONVERT(VARCHAR(3), OPTION_DELIVERY_MONTH, 113), 2))
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), OPTION_DELIVERY_MONTH, 113), 8), 2)
                  END,
                  CASE
                    WHEN OPTION_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE OPTION_DELIVERY_MONTHNUMBER
                  END,
                  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  OPTION_DELIVERY_MONTHNUMBER,
				  OPTION_DELIVERY_MONTH
		UNION ALL
		SELECT Sum(CASE
             WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
             ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
           END)                            AS QTY,
        A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
        A.COMMODITY,
        CASE
          WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
          ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
        END                                 AS SHIP_MONTH,
		CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'
              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,
        CASE
          WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
          ELSE PHYSICAL_DELIVERY_MONTHNUMBER
        END                                 AS MONTHNUMBER,
		PROFIT_CENTER
		FROM   DAILY_PNL_ATTRIBUTION A
			LEFT JOIN DAILY_CONTRACT_DATA CTR
                ON A.POSITION_ID = CTR.POSITION_ID
		WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
		AND EOD_DATE  = $P{asofdate}
			   --AND LONG_SHORT = 'LONG'
			   --360215-start
			   --AND A.ALLOCATION_TYPE <> 'STOCK'
			   --360215-End
			   AND CTR_TYPE = 'PAPER'
		AND CONTRACT_BOOK like $P{cbk}
		AND COMMODITY like $P{cmd}
		AND PROFIT_CENTER like $P{pc}
		AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
		AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
		$P!{QSTR_Filter}
		GROUP  BY A.COMMODITY,
				  CASE
					WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
					ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
						 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
						 + '-'
						 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
				  END,
				  CASE
					 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
					 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
						  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
						  + '-'
						  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
				   END,
				  CASE
					WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
					ELSE PHYSICAL_DELIVERY_MONTHNUMBER
				  END,
				  A.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  				 --
				  PHYSICAL_DELIVERY_MONTHNUMBER,
				  PHYSICAL_DELIVERY_MONTH,
				  FUTURE_DELIVERY_MONTHNUMBER,
				  FUTURE_DELIVERY_MONTH
       UNION ALL
       --Net Differentials 360215 - Start
		SELECT
		-SUM(QTY),CONTRACT_BOOK,COMMODITY,SHIP_MONTH,TERM_MONTH,MONTHNUMBER,PROFIT_CENTER
		FROM
		(

		SELECT Sum(CASE
                     WHEN LONG_SHORT = 'Long' THEN QUANTITY
                     ELSE -QUANTITY
                   END)       AS QTY,
               w.CONTRACT_BOOK,
               MATERIAL_GROUP AS COMMODITY,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS SHIP_MONTH,
			   CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                      + '-'
                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
               END            AS TERM_MONTH,
               CASE
                 WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                 ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
               END            AS MONTHNUMBER,
			   A.PROFIT_CENTER
        FROM   DM_POSITION_DATA A
		JOIN (SELECT distinct ct.CTRBOOKCODE contract_book,pc.pcname profit_center
  FROM [cxcdata_olam47].[dbo].[CTRBOOKPC] ctpc
  JOIN  [cxcdata_olam47].[dbo].[JCPROFITCENTER] pc
              ON ctpc.pcid = pc.pcid
  JOIN  [cxcdata_olam47].[dbo].[CTRBOOK] ct
              ON ctpc.ctrbookid = ct.ctrbookid
			  WHERE  CTRBOOKCODE  like '%')w
ON A.profit_center = w.profit_center COLLATE DATABASE_DEFAULT

        WHERE  A.ORIGIN_DATA_TYPE IN ( 'PO', 'SO' )
		AND REPORT_DATE = $P{origindate}
               AND PRICED_UNPRICED = 'Unpriced'

        AND MATERIAL_GROUP like $P{cmd}
        AND COALESCE(UPPER(RIGHT(CONVERT(VARCHAR(12), DELIVERY_MONTH_AND_YEAR,113),8)),'') LIKE $P{shipmonth}
        AND A.PROFIT_CENTER like $P{pc}
        $P!{QSTR_Filter_1}
        GROUP  BY CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
				  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
                    ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 3)
                         + '-'
                         + RIGHT(RIGHT(CONVERT(VARCHAR(11), DELIVERY_MONTH_AND_YEAR, 113), 8), 2)
                  END,
                  CASE
                    WHEN Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '') < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
                    ELSE Replace(LEFT(DELIVERY_MONTH_AND_YEAR, 7), '-', '')
                  END,
                  MATERIAL_GROUP,
                  w.CONTRACT_BOOK,
				  A.PROFIT_CENTER,
				  DELIVERY_MONTH_AND_YEAR
        UNION ALL
			--360215 Start

			SELECT ISNULL(SUM(CASE
             WHEN PRICING_TYPE = 'UNPRICED'
                  AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
                  AND BASIS_MARKET_PRICE_INDEX <> 'NA'
                  AND A.ALLOCATION_ID = A.PRICING_ID THEN





               CASE
                 WHEN LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY--( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
                 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
               END
           END),0)                                 AS QTY,
       A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY      AS COMMODITY,
       --'Stock - Differential Price' AS POSITION_TYPE,
       --0                                        AS FLAG,
       --22                                       AS ORDERBY,
       --'OIL Position'                           AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'



                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)


         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'

              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                      AS SHIP_MONTH,

	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                   + '-'



                                                                                                                   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)


         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'

              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                      AS TERM_MONTH,

       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')




         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                      AS MONTHNUMBER,

	   A.PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		--360748
			   ----360215 - Start
			   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
					FROM
					(
				--SELECT POSITION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY--,pricing_id
				--	FROM
				--	(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY,
							  --X.TOTAL_FIXED_PRICE_QTY TOTAL_FIXED_PRICE_QTY,
							  --X.TOTAL_PROV_PRICE_QTY
							  X.pricing_id
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY,pricing_id
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY,pricing_id
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID,pricing_id) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  PURCHASE_POSITION_ID POSITION_ID,
							  PURCHASE_ALLOCATION_ID ALLOCATION_ID,
							  PURCHASE_PRICING_ID PRICING_ID
							FROM REALIZATION_DETAIL DPR
							WHERE VALUATION_DATE <= $P{asofdate}
							GROUP BY PURCHASE_POSITION_ID,
									 PURCHASE_ALLOCATION_ID,
									 PURCHASE_PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID AND X.PRICING_ID = y.PRICING_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID, PRICING_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.PRICING_ID = B.PRICING_ID
		--360215 - End
WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       AND A.ALLOCATION_TYPE = 'STOCK'
--360215 - Start
AND LONG_SHORT = 'LONG'
--AND EXISTS (SELECT POSITION_ID FROM DUMP_BI_FINANCIAL_LOAD_DETAILS B WHERE A.POSITION_ID = B.POSITION_ID AND B.TOTAL_PROV_PRICE_QTY > 0 )
--AND NOT EXISTS (SELECT POSITION_ID FROM DAILY_PNL_REALIZATION B WHERE A.POSITION_ID = B.POSITION_ID)
--360215 - End

AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE

            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
                                                                                                                      + '-'



                                                                                                                      + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)


            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'

                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,

		  CASE
			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN LEFT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 3)
																													   + '-'
																													   + RIGHT(RIGHT(CONVERT(VARCHAR(11), (CAST($P{asofdate} AS DATE)), 113), 8), 2)
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '')
            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --
		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH
UNION ALL
SELECT

			CASE WHEN B.TOTAL_PROV_PRICE_QTY > 0 and A.ALLOCATION_TYPE = 'STOCK' THEN
					Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
				   -
				   ISNULL(MAX(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN B.TOTAL_PROV_PRICE_QTY
					 ELSE -B.TOTAL_PROV_PRICE_QTY
				   END),0)
				   ELSE
				   Sum(CASE
					 WHEN A.LONG_SHORT = 'LONG' THEN ( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
					 ELSE -( CURRENT_OPEN_QUANTITY * UOM_FACTOR_FROM_POS_TO_RPT )
				   END)
			END
		   AS QTY,
       A.CONTRACT_BOOK  COLLATE DATABASE_DEFAULT as CONTRACT_BOOK,
	   COMMODITY,
       --A.PROFIT_CENTER + ' ' + A.COMMODITY AS COMMODITY,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 'Purchase Contract - Differential Price'
       --  ELSE 'Sales Contract - Differential Price'
       --END                                 AS POSITION_TYPE,
       --0                                   AS FLAG,
       --CASE
       --  WHEN A.LONG_SHORT = 'LONG' THEN 24
       --  ELSE 26
       --END                                 AS ORDERBY,
       --'OIL Position'                      AS POSITION,
       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
              + '-'

              + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
       END                                 AS SHIP_MONTH,
	   CASE
         WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'


         ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
              + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
              + '-'

              + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
       END                                 AS TERM_MONTH,

       CASE
         WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1
         ELSE PHYSICAL_DELIVERY_MONTHNUMBER
       END                                 AS MONTHNUMBER,
	   PROFIT_CENTER
FROM   DAILY_PNL_ATTRIBUTION A
       LEFT JOIN DAILY_CONTRACT_DATA CTR
              ON A.POSITION_ID = CTR.POSITION_ID
		----360215 - Start
	   LEFT JOIN (
					SELECT POSITION_ID, ALLOCATION_ID, SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY, SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
					FROM
					(
						SELECT
							  X.POSITION_ID,
							  X.ALLOCATION_ID,
							  X.TOTAL_FIXED_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_FIXED_PRICE_QTY,
							  X.TOTAL_PROV_PRICE_QTY - ISNULL(Y.REALIZED_QUANTITY, 0) TOTAL_PROV_PRICE_QTY
							  --X.TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  T1.ALLOCATION_ID,
							  POSITION_ID,
							  SUM(TOTAL_FIXED_PRICE_QTY) AS TOTAL_FIXED_PRICE_QTY,
							  SUM(TOTAL_PROV_PRICE_QTY) AS TOTAL_PROV_PRICE_QTY
							FROM (SELECT
							  ALLOCATION_ID,
							  POSITION_ID,
							  LOAD_ID,
							  MAX(TOTAL_FIXED_PRICE_QTY) TOTAL_FIXED_PRICE_QTY,
							  MIN(TOTAL_PROV_PRICE_QTY) TOTAL_PROV_PRICE_QTY
							FROM DUMP_BI_FINANCIAL_LOAD_DETAILS D
							WHERE DOCUMENT_DATE <= $P{asofdate}-- AND ALLOCATION_ID <> PRICING_ID
							GROUP BY ALLOCATION_ID,
									 POSITION_ID,
									 pricing_id,
									 LOAD_ID) T1
							GROUP BY T1.ALLOCATION_ID,
									 POSITION_ID) X
							LEFT JOIN (SELECT
							  SUM(REALIZED_QUANTITY) REALIZED_QUANTITY,
							  POSITION_ID,
							  ALLOCATION_ID,
							  PRICING_ID
							FROM DAILY_PNL_REALIZATION DPR
							WHERE REALIZED_DATE <= $P{asofdate}
							GROUP BY POSITION_ID,
									 ALLOCATION_ID,
									 PRICING_ID) Y
							  ON X.POSITION_ID = Y.POSITION_ID
							  AND X.ALLOCATION_ID = y.ALLOCATION_ID
					) B1
					GROUP BY POSITION_ID, ALLOCATION_ID
					) B
				ON A.POSITION_ID = B.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID
		--360215 - End


WHERE  A.INSTRUMENT_TYPE = 'PHYSICAL'
AND EOD_DATE  = $P{asofdate}
       --AND A.ALLOCATION_TYPE <> 'STOCK'
	   AND A.ALLOCATION_TYPE IS NOT NULL
       AND PRICING_TYPE = 'UNPRICED'
       AND BASIS_MARKET_PRICE_INDEX IS NOT NULL
       AND BASIS_MARKET_PRICE_INDEX <> 'NA'
       AND A.ALLOCATION_ID = A.PRICING_ID
	   --360748
		AND NOT EXISTS(SELECT 1 FROM DUMP_BI_FINANCIAL_LOAD_DETAILS WHERE B.POSITION_ID = A.POSITION_ID AND A.ALLOCATION_ID = B.ALLOCATION_ID AND A.LONG_SHORT = 'LONG' and allocation_type = 'STOCK')
AND CONTRACT_BOOK like $P{cbk}
AND COMMODITY like $P{cmd}
AND PROFIT_CENTER like $P{pc}
AND PHYSICAL_DELIVERY_MONTH LIKE $P{shipmonth}
AND COALESCE(CTR.FUTURE_TERM,'') LIKE $P{futterm}
$P!{QSTR_Filter}
GROUP  BY A.COMMODITY,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
            ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 1)
                 + Lower(RIGHT(CONVERT(VARCHAR(3), PHYSICAL_DELIVERY_MONTH, 113), 2))
                 + '-'
                 + RIGHT(RIGHT(CONVERT(VARCHAR(11), PHYSICAL_DELIVERY_MONTH, 113), 8), 2)
          END,
		  CASE

			 WHEN ISNULL(FUTURE_DELIVERY_MONTHNUMBER,PHYSICAL_DELIVERY_MONTHNUMBER) < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 'Expired'
			 ELSE LEFT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 1)
				  + Lower(RIGHT(CONVERT(VARCHAR(3), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 2))
				  + '-'
				  + RIGHT(RIGHT(CONVERT(VARCHAR(11), ISNULL(FUTURE_DELIVERY_MONTH,PHYSICAL_DELIVERY_MONTH), 113), 8), 2)
		   END,
          CASE
            WHEN PHYSICAL_DELIVERY_MONTHNUMBER < Replace(LEFT(CONVERT(VARCHAR(10), (CAST($P{asofdate} AS DATE)), 111), 7), '/', '') THEN 1


            ELSE PHYSICAL_DELIVERY_MONTHNUMBER
          END,
          LONG_SHORT,

          A.CONTRACT_BOOK,
		  PROFIT_CENTER,
		  --

		  PHYSICAL_DELIVERY_MONTHNUMBER,
		  PHYSICAL_DELIVERY_MONTH,
		  FUTURE_DELIVERY_MONTHNUMBER,
		  FUTURE_DELIVERY_MONTH,B.TOTAL_PROV_PRICE_QTY,A.ALLOCATION_TYPE
		--Net Differentials 360215 - End
		) T
		GROUP BY CONTRACT_BOOK,COMMODITY,SHIP_MONTH,TERM_MONTH,MONTHNUMBER,PROFIT_CENTER


				  ) CTR
GROUP  BY CTR.COMMODITY,
          CTR.SHIP_MONTH,
		  CTR.TERM_MONTH,
          CTR.MONTHNUMBER,
          CTR.CONTRACT_BOOK,
		  CTR.PROFIT_CENTER
		  ) Superset_tbl
WHERE PROFIT_CENTER like $P{pc}
GROUP  BY Superset_tbl.COMMODITY,Superset_tbl.CMD,
          Superset_tbl.MONTHNUMBER,
          Superset_tbl.CONTRACT_BOOK,
		  Superset_tbl.QTY,
		  Superset_tbl.POSITION_TYPE,
		  Superset_tbl.FLAG
		 ,Superset_tbl.ORDERBY
		 ,Superset_tbl.POSITION
		 ,Superset_tbl.SHIP_MONTH
		 ,Superset_tbl.TERM_MONTH
		 ,Superset_tbl.PROFIT_CENTER
) T1
WHERE INS_TYPE like $P{instrument_type}
AND QTY <> 0
ORDER  BY 2,
          6,
          8]]>
		</queryString>
		<field name="QTY" class="java.math.BigDecimal"/>
		<field name="CONTRACT_BOOK" class="java.lang.String"/>
		<field name="COMMODITY" class="java.lang.String"/>
		<field name="CMD" class="java.lang.String"/>
		<field name="POSITION_TYPE" class="java.lang.String"/>
		<field name="FLAG" class="java.lang.Integer"/>
		<field name="ORDERBY" class="java.lang.Integer"/>
		<field name="POSITION" class="java.lang.String"/>
		<field name="SHIP_MONTH" class="java.lang.String"/>
		<field name="MONTHNUMBER" class="java.lang.Integer"/>
		<field name="INS_TYPE" class="java.lang.String"/>
		<field name="PROFIT_CENTER" class="java.lang.String"/>
	</subDataset>
	<parameter name="cbk" class="java.lang.String"/>
	<parameter name="pc" class="java.lang.String"/>
	<parameter name="cmd" class="java.lang.String"/>
	<parameter name="shipmonth" class="java.lang.String"/>
	<parameter name="futterm" class="java.lang.String"/>
	<parameter name="LE_Filter" class="java.lang.String">
		<parameterDescription><![CDATA[]]></parameterDescription>
		<defaultValueExpression><![CDATA[' ']]></defaultValueExpression>
	</parameter>
	<parameter name="QSTR_Filter" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA[" AND CONTRACT_BOOK IN ('" + $P{LE_Filter} + "')"]]></defaultValueExpression>
	</parameter>
	<parameter name="asofdate" class="java.util.Date"/>
	<parameter name="origindate" class="java.util.Date">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="col_group" class="java.lang.String"/>
	<parameter name="instrument_type" class="java.lang.String"/>
	<parameter name="QSTR_Filter_1" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA[" AND w.CONTRACT_BOOK IN ('" + $P{LE_Filter} + "')"]]></defaultValueExpression>
	</parameter>
	<queryString>
		<![CDATA[SELECT 1 AS ROWNUM]]>
	</queryString>
	<field name="ROWNUM" class="java.lang.Integer"/>
	<background>
		<band splitType="Stretch"/>
	</background>
	<detail>
		<band>
			<property name="local_mesure_unitheight" value="pixel"/>
			<property name="com.jaspersoft.studio.unit.height" value="px"/>
			<crosstab columnBreakOffset="20" ignoreWidth="true">
				<reportElement positionType="Float" isPrintRepeatedValues="false" x="0" y="0" width="1960" height="0" uuid="09b7685f-90a5-4d00-ac77-040684f92d02">
					<property name="local_mesure_unitwidth" value="pixel"/>
					<property name="com.jaspersoft.studio.unit.width" value="px"/>
					<property name="local_mesure_unitx" value="pixel"/>
					<property name="com.jaspersoft.studio.unit.x" value="px"/>
					<property name="local_mesure_unity" value="pixel"/>
					<property name="com.jaspersoft.studio.unit.y" value="px"/>
					<property name="local_mesure_unitheight" value="pixel"/>
					<property name="com.jaspersoft.studio.unit.height" value="px"/>
				</reportElement>
				<crosstabParameter name="drilldown_path">
					<parameterValueExpression><![CDATA["/standard/Drilldown_Report/"]]></parameterValueExpression>
				</crosstabParameter>
				<crosstabParameter name="cbk">
					<parameterValueExpression><![CDATA[$P{cbk}]]></parameterValueExpression>
				</crosstabParameter>
				<crosstabParameter name="pc">
					<parameterValueExpression><![CDATA[$P{pc}]]></parameterValueExpression>
				</crosstabParameter>
				<crosstabParameter name="cmd">
					<parameterValueExpression><![CDATA[$P{cmd}]]></parameterValueExpression>
				</crosstabParameter>
				<crosstabParameter name="futterm">
					<parameterValueExpression><![CDATA[$P{futterm}]]></parameterValueExpression>
				</crosstabParameter>
				<crosstabParameter name="shipmonth">
					<parameterValueExpression><![CDATA[$P{shipmonth}]]></parameterValueExpression>
				</crosstabParameter>
				<crosstabParameter name="asofdate" class="java.util.Date">
					<parameterValueExpression><![CDATA[$P{asofdate}]]></parameterValueExpression>
				</crosstabParameter>
				<crosstabParameter name="origindate" class="java.util.Date">
					<parameterValueExpression><![CDATA[$P{origindate}]]></parameterValueExpression>
				</crosstabParameter>
				<crosstabParameter name="col_group">
					<parameterValueExpression><![CDATA[$P{col_group}]]></parameterValueExpression>
				</crosstabParameter>
				<crosstabDataset>
					<dataset>
						<datasetRun subDataset="commodity" uuid="0ebea0ff-9d0e-48d5-a23f-fb71e7157cf7">
							<datasetParameter name="cbk">
								<datasetParameterExpression><![CDATA[$P{cbk}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="pc">
								<datasetParameterExpression><![CDATA[$P{pc}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="cmd">
								<datasetParameterExpression><![CDATA[$P{cmd}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="shipmonth">
								<datasetParameterExpression><![CDATA[$P{shipmonth}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="futterm">
								<datasetParameterExpression><![CDATA[$P{futterm}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="LE_Filter">
								<datasetParameterExpression><![CDATA[$P{LE_Filter}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="QSTR_Filter">
								<datasetParameterExpression><![CDATA[$P{QSTR_Filter}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="asofdate">
								<datasetParameterExpression><![CDATA[$P{asofdate}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="origindate">
								<datasetParameterExpression><![CDATA[$P{origindate}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="col_group">
								<datasetParameterExpression><![CDATA[$P{col_group}]]></datasetParameterExpression>
							</datasetParameter>
							<datasetParameter name="instrument_type">
								<datasetParameterExpression><![CDATA[$P{instrument_type}]]></datasetParameterExpression>
							</datasetParameter>
							<connectionExpression><![CDATA[$P{REPORT_CONNECTION}]]></connectionExpression>
						</datasetRun>
					</dataset>
				</crosstabDataset>
				<crosstabHeaderCell>
					<cellContents style="Crosstab 3_CH">
						<box>
							<topPen lineColor="#4F81BD"/>
							<leftPen lineColor="#4F81BD"/>
							<bottomPen lineColor="#4F81BD"/>
							<rightPen lineColor="#4F81BD"/>
						</box>
						<staticText>
							<reportElement mode="Opaque" x="0" y="0" width="100" height="20" forecolor="#000000" backcolor="#8DB4E2" uuid="e58bb1c5-586b-4910-84f5-6269e617a60b"/>
							<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
								<topPen lineWidth="0.25" lineColor="#1F497D"/>
								<leftPen lineWidth="0.25" lineColor="#1F497D"/>
								<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
								<rightPen lineWidth="0.25" lineColor="#1F497D"/>
							</box>
							<textElement textAlignment="Center" verticalAlignment="Middle">
								<font fontName="Arial" size="11" isBold="true"/>
							</textElement>
							<text><![CDATA[PC-Commodity]]></text>
						</staticText>
						<textField>
							<reportElement mode="Opaque" x="100" y="0" width="170" height="20" backcolor="#8DB4E2" uuid="54e6cabd-b614-48de-8e2e-7dceaf72ebd0">
								<property name="local_mesure_unity" value="pixel"/>
								<property name="com.jaspersoft.studio.unit.y" value="px"/>
								<property name="local_mesure_unitwidth" value="pixel"/>
								<property name="com.jaspersoft.studio.unit.width" value="px"/>
								<property name="local_mesure_unitx" value="pixel"/>
								<property name="com.jaspersoft.studio.unit.x" value="px"/>
							</reportElement>
							<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
								<topPen lineWidth="0.25" lineColor="#1F497D"/>
								<leftPen lineWidth="0.25" lineColor="#1F497D"/>
								<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
								<rightPen lineWidth="0.25" lineColor="#1F497D"/>
							</box>
							<textElement textAlignment="Center" verticalAlignment="Middle">
								<font fontName="Arial" size="11" isBold="true"/>
							</textElement>
							<textFieldExpression><![CDATA["Position"]]></textFieldExpression>
						</textField>
						<textField>
							<reportElement stretchType="RelativeToTallestObject" mode="Opaque" x="270" y="0" width="220" height="20" backcolor="#8DB4E2" uuid="f4854722-0a52-4b00-b869-8ac2b959a4f7">
								<property name="local_mesure_unity" value="pixel"/>
								<property name="com.jaspersoft.studio.unit.y" value="px"/>
								<property name="local_mesure_unitwidth" value="pixel"/>
								<property name="com.jaspersoft.studio.unit.width" value="px"/>
								<property name="local_mesure_unitx" value="pixel"/>
								<property name="com.jaspersoft.studio.unit.x" value="px"/>
							</reportElement>
							<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
								<topPen lineWidth="0.25" lineColor="#1F497D"/>
								<leftPen lineWidth="0.25" lineColor="#1F497D"/>
								<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
								<rightPen lineWidth="0.25" lineColor="#1F497D"/>
							</box>
							<textElement textAlignment="Center" verticalAlignment="Middle">
								<font fontName="Arial" size="11" isBold="true"/>
							</textElement>
							<textFieldExpression><![CDATA["Position Type"]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabHeaderCell>
				<rowGroup name="COMMODITY1" width="100">
					<bucket class="java.lang.String">
						<bucketExpression><![CDATA[$F{COMMODITY}]]></bucketExpression>
					</bucket>
					<crosstabRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CD">
							<property name="local_mesure_unitwidth" value="pixel"/>
							<property name="com.jaspersoft.studio.unit.width" value="px"/>
							<box>
								<topPen lineColor="#4F81BD"/>
								<leftPen lineColor="#4F81BD"/>
								<bottomPen lineColor="#4F81BD"/>
								<rightPen lineColor="#4F81BD"/>
							</box>
							<textField isStretchWithOverflow="true" isBlankWhenNull="true">
								<reportElement x="0" y="0" width="100" height="20" uuid="bdedab2c-b741-48e7-b119-48180c575f29">
									<property name="local_mesure_unitheight" value="pixel"/>
									<property name="com.jaspersoft.studio.unit.height" value="px"/>
								</reportElement>
								<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
									<topPen lineWidth="0.25" lineColor="#1F497D"/>
									<leftPen lineWidth="0.25" lineColor="#1F497D"/>
									<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
									<rightPen lineWidth="0.25" lineColor="#1F497D"/>
								</box>
								<textElement verticalAlignment="Middle">
									<font fontName="Arial" size="10"/>
								</textElement>
								<textFieldExpression><![CDATA[$V{COMMODITY1}]]></textFieldExpression>
							</textField>
						</cellContents>
					</crosstabRowHeader>
					<crosstabTotalRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CT">
							<staticText>
								<reportElement x="0" y="0" width="300" height="20" uuid="702637d7-e707-4412-93ef-0e5002de4e5f"/>
								<text><![CDATA[Total COMMODITY1]]></text>
							</staticText>
						</cellContents>
					</crosstabTotalRowHeader>
				</rowGroup>
				<rowGroup name="ORDERBY1" width="0">
					<bucket class="java.lang.Integer">
						<bucketExpression><![CDATA[$F{ORDERBY}]]></bucketExpression>
					</bucket>
					<crosstabRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CD">
							<box>
								<topPen lineWidth="0.0" lineColor="#4F81BD"/>
								<leftPen lineWidth="0.0" lineColor="#4F81BD"/>
								<bottomPen lineWidth="0.0" lineColor="#4F81BD"/>
								<rightPen lineWidth="0.0" lineColor="#4F81BD"/>
							</box>
						</cellContents>
					</crosstabRowHeader>
					<crosstabTotalRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CG">
							<staticText>
								<reportElement x="0" y="0" width="240" height="20" uuid="24786437-f046-4c82-8ae1-7f0b804b3df0"/>
								<text><![CDATA[Total ORDERBY1]]></text>
							</staticText>
						</cellContents>
					</crosstabTotalRowHeader>
				</rowGroup>
				<rowGroup name="FLAG1" width="0">
					<bucket class="java.lang.Integer">
						<bucketExpression><![CDATA[$F{FLAG}]]></bucketExpression>
					</bucket>
					<crosstabRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CD">
							<box>
								<topPen lineWidth="0.0" lineColor="#4F81BD"/>
								<leftPen lineWidth="0.0" lineColor="#4F81BD"/>
								<bottomPen lineWidth="0.0" lineColor="#4F81BD"/>
								<rightPen lineWidth="0.0" lineColor="#4F81BD"/>
							</box>
						</cellContents>
					</crosstabRowHeader>
					<crosstabTotalRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CG">
							<staticText>
								<reportElement x="0" y="0" width="180" height="20" uuid="4f4ed7e4-faae-4127-931f-adbf27debb96"/>
								<text><![CDATA[Total FLAG1]]></text>
							</staticText>
						</cellContents>
					</crosstabTotalRowHeader>
				</rowGroup>
				<rowGroup name="POSITION1" width="170">
					<bucket class="java.lang.String">
						<bucketExpression><![CDATA[$F{POSITION}]]></bucketExpression>
					</bucket>
					<crosstabRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CD">
							<property name="local_mesure_unitwidth" value="pixel"/>
							<property name="com.jaspersoft.studio.unit.width" value="px"/>
							<box>
								<topPen lineColor="#4F81BD"/>
								<leftPen lineColor="#4F81BD"/>
								<bottomPen lineColor="#4F81BD"/>
								<rightPen lineColor="#4F81BD"/>
							</box>
							<textField isStretchWithOverflow="true" isBlankWhenNull="true">
								<reportElement x="0" y="0" width="170" height="20" uuid="98ad35b0-6eb9-4dab-aaf1-57fe78f00af6">
									<property name="com.jaspersoft.studio.unit.height" value="px"/>
									<printWhenExpression><![CDATA[$V{FLAG1}!=1]]></printWhenExpression>
								</reportElement>
								<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
									<topPen lineWidth="0.25" lineColor="#1F497D"/>
									<leftPen lineWidth="0.25" lineColor="#1F497D"/>
									<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
									<rightPen lineWidth="0.25" lineColor="#1F497D"/>
								</box>
								<textElement verticalAlignment="Middle">
									<font fontName="Arial" size="10"/>
								</textElement>
								<textFieldExpression><![CDATA[$V{POSITION1}]]></textFieldExpression>
							</textField>
							<textField isStretchWithOverflow="true" isBlankWhenNull="true">
								<reportElement x="0" y="0" width="170" height="20" uuid="23617fa6-5809-4b65-865b-d36ae7087a82">
									<property name="com.jaspersoft.studio.unit.height" value="px"/>
									<property name="local_mesure_unitx" value="pixel"/>
									<property name="com.jaspersoft.studio.unit.x" value="px"/>
									<property name="local_mesure_unity" value="pixel"/>
									<property name="com.jaspersoft.studio.unit.y" value="px"/>
									<printWhenExpression><![CDATA[$V{FLAG1}==1]]></printWhenExpression>
								</reportElement>
								<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
									<topPen lineWidth="0.25" lineColor="#1F497D"/>
									<leftPen lineWidth="0.25" lineColor="#1F497D"/>
									<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
									<rightPen lineWidth="0.25" lineColor="#1F497D"/>
								</box>
								<textElement verticalAlignment="Middle">
									<font fontName="Arial" size="10" isBold="true" isItalic="false"/>
								</textElement>
								<textFieldExpression><![CDATA[$V{POSITION1}]]></textFieldExpression>
							</textField>
						</cellContents>
					</crosstabRowHeader>
					<crosstabTotalRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CG">
							<staticText>
								<reportElement x="0" y="0" width="120" height="20" uuid="b96ea915-6ba2-45f1-a1cb-e71c4a85b26c"/>
								<text><![CDATA[Total POSITION1]]></text>
							</staticText>
						</cellContents>
					</crosstabTotalRowHeader>
				</rowGroup>
				<rowGroup name="POSITION_TYPE1" width="220">
					<bucket class="java.lang.String">
						<bucketExpression><![CDATA[$F{POSITION_TYPE}]]></bucketExpression>
					</bucket>
					<crosstabRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CD">
							<property name="local_mesure_unitwidth" value="pixel"/>
							<property name="com.jaspersoft.studio.unit.width" value="px"/>
							<box>
								<topPen lineColor="#4F81BD"/>
								<leftPen lineColor="#4F81BD"/>
								<bottomPen lineColor="#4F81BD"/>
								<rightPen lineColor="#4F81BD"/>
							</box>
							<textField isStretchWithOverflow="true" isBlankWhenNull="true">
								<reportElement x="0" y="0" width="220" height="20" uuid="32b8d305-9c98-4bf8-a9ce-7b2da9f02be3">
									<printWhenExpression><![CDATA[$V{FLAG1}!=1]]></printWhenExpression>
								</reportElement>
								<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
									<topPen lineWidth="0.25" lineColor="#1F497D"/>
									<leftPen lineWidth="0.25" lineColor="#1F497D"/>
									<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
									<rightPen lineWidth="0.25" lineColor="#1F497D"/>
								</box>
								<textElement verticalAlignment="Middle">
									<font fontName="Arial" size="10"/>
								</textElement>
								<textFieldExpression><![CDATA[$V{POSITION_TYPE1}]]></textFieldExpression>
							</textField>
							<textField isStretchWithOverflow="true" isBlankWhenNull="true">
								<reportElement x="0" y="0" width="220" height="20" uuid="638d8ca5-b210-4a97-a186-7fa57a097e97">
									<property name="com.jaspersoft.studio.unit.x" value="px"/>
									<property name="com.jaspersoft.studio.unit.y" value="px"/>
									<printWhenExpression><![CDATA[$V{FLAG1}==1]]></printWhenExpression>
								</reportElement>
								<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
									<topPen lineWidth="0.25" lineColor="#1F497D"/>
									<leftPen lineWidth="0.25" lineColor="#1F497D"/>
									<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
									<rightPen lineWidth="0.25" lineColor="#1F497D"/>
								</box>
								<textElement verticalAlignment="Middle">
									<font fontName="Arial" size="10" isBold="true" isItalic="false"/>
								</textElement>
								<textFieldExpression><![CDATA[$V{POSITION_TYPE1}]]></textFieldExpression>
							</textField>
						</cellContents>
					</crosstabRowHeader>
					<crosstabTotalRowHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CG">
							<staticText>
								<reportElement x="0" y="0" width="60" height="20" uuid="4c12fead-9f5b-46bb-9c45-53c10c480a41"/>
								<text><![CDATA[Total POSITION_TYPE1]]></text>
							</staticText>
						</cellContents>
					</crosstabTotalRowHeader>
				</rowGroup>
				<rowGroup name="PROFIT_CENTER1" width="0">
					<bucket class="java.lang.String">
						<bucketExpression><![CDATA[$F{PROFIT_CENTER}]]></bucketExpression>
					</bucket>
					<crosstabRowHeader>
						<cellContents/>
					</crosstabRowHeader>
					<crosstabTotalRowHeader>
						<cellContents/>
					</crosstabTotalRowHeader>
				</rowGroup>
				<rowGroup name="CMD1" width="0">
					<bucket class="java.lang.String">
						<bucketExpression><![CDATA[$F{CMD}]]></bucketExpression>
					</bucket>
					<crosstabRowHeader>
						<cellContents/>
					</crosstabRowHeader>
					<crosstabTotalRowHeader>
						<cellContents/>
					</crosstabTotalRowHeader>
				</rowGroup>
				<columnGroup name="MONTHNUMBER1" height="0" totalPosition="Start">
					<bucket class="java.lang.Integer">
						<bucketExpression><![CDATA[$F{MONTHNUMBER}]]></bucketExpression>
					</bucket>
					<crosstabColumnHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CH">
							<box>
								<topPen lineColor="#4F81BD"/>
								<leftPen lineColor="#4F81BD"/>
								<bottomPen lineColor="#4F81BD"/>
								<rightPen lineColor="#4F81BD"/>
							</box>
						</cellContents>
					</crosstabColumnHeader>
					<crosstabTotalColumnHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CH">
							<box>
								<topPen lineColor="#4F81BD"/>
								<leftPen lineColor="#4F81BD"/>
								<bottomPen lineColor="#4F81BD"/>
								<rightPen lineColor="#4F81BD"/>
							</box>
							<staticText>
								<reportElement mode="Opaque" x="0" y="0" width="100" height="20" backcolor="#8DB4E2" uuid="41e9486a-768e-4634-ae19-baa067c59f46"/>
								<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
									<topPen lineWidth="0.25" lineColor="#1F497D"/>
									<leftPen lineWidth="0.25" lineColor="#1F497D"/>
									<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
									<rightPen lineWidth="0.25" lineColor="#1F497D"/>
								</box>
								<textElement textAlignment="Center" verticalAlignment="Middle">
									<font fontName="Arial" size="11" isBold="true"/>
								</textElement>
								<text><![CDATA[Total MONTHNUMBER1]]></text>
							</staticText>
						</cellContents>
					</crosstabTotalColumnHeader>
				</columnGroup>
				<columnGroup name="SHIP_MONTH1" height="20">
					<bucket class="java.lang.String">
						<bucketExpression><![CDATA[$F{SHIP_MONTH}]]></bucketExpression>
					</bucket>
					<crosstabColumnHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CH">
							<box>
								<topPen lineColor="#4F81BD"/>
								<leftPen lineColor="#4F81BD"/>
								<bottomPen lineColor="#4F81BD"/>
								<rightPen lineColor="#4F81BD"/>
							</box>
							<textField>
								<reportElement mode="Opaque" x="0" y="0" width="100" height="20" backcolor="#8DB4E2" uuid="3ffe00c2-0bb2-4b95-a66f-024998a0539b"/>
								<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
									<topPen lineWidth="0.25" lineColor="#1F497D"/>
									<leftPen lineWidth="0.25" lineColor="#1F497D"/>
									<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
									<rightPen lineWidth="0.25" lineColor="#1F497D"/>
								</box>
								<textElement textAlignment="Center" verticalAlignment="Middle">
									<font fontName="Arial" size="11" isBold="true"/>
								</textElement>
								<textFieldExpression><![CDATA[$V{SHIP_MONTH1}]]></textFieldExpression>
							</textField>
						</cellContents>
					</crosstabColumnHeader>
					<crosstabTotalColumnHeader>
						<cellContents mode="Opaque" style="Crosstab 3_CG">
							<staticText>
								<reportElement x="0" y="0" width="60" height="20" uuid="ba88aa38-ccbd-4b81-93ce-84f1a90d10d9"/>
								<text><![CDATA[Total SHIP_MONTH1]]></text>
							</staticText>
						</cellContents>
					</crosstabTotalColumnHeader>
				</columnGroup>
				<measure name="QTY_MEASURE1" class="java.math.BigDecimal" calculation="Sum">
					<measureExpression><![CDATA[$F{QTY}]]></measureExpression>
				</measure>
				<crosstabCell width="100" height="20">
					<cellContents mode="Opaque" style="Crosstab 3_CD">
						<property name="local_mesure_unitwidth" value="pixel"/>
						<property name="com.jaspersoft.studio.unit.width" value="px"/>
						<box>
							<topPen lineColor="#4F81BD"/>
							<leftPen lineColor="#4F81BD"/>
							<bottomPen lineColor="#4F81BD"/>
							<rightPen lineColor="#4F81BD"/>
						</box>
						<textField isStretchWithOverflow="true" pattern="#,##0;(#,##0)" isBlankWhenNull="true" hyperlinkType="ReportExecution" hyperlinkTarget="Blank">
							<reportElement x="0" y="0" width="100" height="20" uuid="9018511b-5ea0-479f-b4ae-dbac0082054a">
								<printWhenExpression><![CDATA[$V{FLAG1}!=1]]></printWhenExpression>
							</reportElement>
							<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
								<topPen lineWidth="0.25" lineColor="#1F497D"/>
								<leftPen lineWidth="0.25" lineColor="#1F497D"/>
								<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
								<rightPen lineWidth="0.25" lineColor="#1F497D"/>
							</box>
							<textElement textAlignment="Right" verticalAlignment="Middle">
								<font fontName="Arial" size="10"/>
							</textElement>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
							<hyperlinkParameter name="_report">
								<hyperlinkParameterExpression><![CDATA[$P{drilldown_path}+ ($V{ORDERBY1}==41 ? "EOD_market_risk_details_derivatives" : $V{ORDERBY1}==42 ? "EOD_market_risk_details_derivatives" : "EOD_market_risk_details_physical")]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp">
								<hyperlinkParameterExpression><![CDATA[2]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{CMD1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp">
								<hyperlinkParameterExpression><![CDATA[$P{col_group}.equals( "pc" )? "1":$P{col_group}.equals( "sm" )? "2":"3"]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{SHIP_MONTH1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="position">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="postype">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION_TYPE1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="cbk">
								<hyperlinkParameterExpression><![CDATA[$P{cbk}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="cmd">
								<hyperlinkParameterExpression><![CDATA[$V{CMD1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="pc">
								<hyperlinkParameterExpression><![CDATA[$V{PROFIT_CENTER1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="futterm">
								<hyperlinkParameterExpression><![CDATA[$P{futterm}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="shipmonth">
								<hyperlinkParameterExpression><![CDATA[$P{shipmonth}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="asofdate">
								<hyperlinkParameterExpression><![CDATA[$P{asofdate}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
						</textField>
						<textField isStretchWithOverflow="true" pattern="#,##0;(#,##0)" isBlankWhenNull="true" hyperlinkType="ReportExecution" hyperlinkTarget="Blank">
							<reportElement x="0" y="0" width="100" height="20" uuid="4c8f623b-0e44-458b-b78c-f92991a97147">
								<property name="com.jaspersoft.studio.unit.x" value="px"/>
								<property name="com.jaspersoft.studio.unit.y" value="px"/>
								<printWhenExpression><![CDATA[$V{ORDERBY1}==17||$V{ORDERBY1}==27||$V{ORDERBY1}==31||$V{ORDERBY1}==32||$V{ORDERBY1}==53]]></printWhenExpression>
							</reportElement>
							<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
								<topPen lineWidth="0.25" lineColor="#1F497D"/>
								<leftPen lineWidth="0.25" lineColor="#1F497D"/>
								<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
								<rightPen lineWidth="0.25" lineColor="#1F497D"/>
							</box>
							<textElement textAlignment="Right" verticalAlignment="Middle">
								<font fontName="Arial" size="10" isBold="true" isItalic="false"/>
							</textElement>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
							<hyperlinkParameter name="_report">
								<hyperlinkParameterExpression><![CDATA[$P{drilldown_path}+ ($V{ORDERBY1}==41 ? "EOD_market_risk_details_derivatives" : $V{ORDERBY1}==42 ? "EOD_market_risk_details_derivatives" : "EOD_market_risk_details_physical")]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp">
								<hyperlinkParameterExpression><![CDATA[2]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{CMD1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp">
								<hyperlinkParameterExpression><![CDATA[$P{col_group}.equals( "pc" )? "1":$P{col_group}.equals( "sm" )? "2":"3"]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{SHIP_MONTH1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="position">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="postype">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION_TYPE1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="cbk">
								<hyperlinkParameterExpression><![CDATA[$P{cbk}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="cmd">
								<hyperlinkParameterExpression><![CDATA[$V{CMD1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="pc">
								<hyperlinkParameterExpression><![CDATA[$V{PROFIT_CENTER1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="futterm">
								<hyperlinkParameterExpression><![CDATA[$P{futterm}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="shipmonth">
								<hyperlinkParameterExpression><![CDATA[$P{shipmonth}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="asofdate">
								<hyperlinkParameterExpression><![CDATA[$P{asofdate}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
						</textField>
						<textField isStretchWithOverflow="true" pattern="#,##0;(#,##0)" isBlankWhenNull="true" hyperlinkTarget="Blank">
							<reportElement x="0" y="0" width="100" height="20" uuid="b51b34a4-5fd6-4480-991e-d55f94376956">
								<property name="com.jaspersoft.studio.unit.x" value="px"/>
								<property name="com.jaspersoft.studio.unit.y" value="px"/>
								<printWhenExpression><![CDATA[$V{ORDERBY1}==44||$V{ORDERBY1}==51||$V{ORDERBY1}==52||$V{ORDERBY1}==54]]></printWhenExpression>
							</reportElement>
							<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
								<topPen lineWidth="0.25" lineColor="#1F497D"/>
								<leftPen lineWidth="0.25" lineColor="#1F497D"/>
								<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
								<rightPen lineWidth="0.25" lineColor="#1F497D"/>
							</box>
							<textElement textAlignment="Right" verticalAlignment="Middle">
								<font fontName="Arial" size="10" isBold="true" isItalic="false"/>
							</textElement>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
							<hyperlinkParameter name="_report">
								<hyperlinkParameterExpression><![CDATA[$P{drilldown_path}+ ($V{ORDERBY1}==41 ? "market_risk_details_derivatives" : $V{ORDERBY1}==42 ? "market_risk_details_derivatives" : "market_risk_details_physical")]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp">
								<hyperlinkParameterExpression><![CDATA[2]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{COMMODITY1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp">
								<hyperlinkParameterExpression><![CDATA[2]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{SHIP_MONTH1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="position">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="postype">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION_TYPE1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="100" height="20" columnTotalGroup="MONTHNUMBER1">
					<cellContents mode="Opaque" style="Crosstab 3_CT">
						<property name="local_mesure_unitwidth" value="pixel"/>
						<property name="com.jaspersoft.studio.unit.width" value="px"/>
						<box>
							<topPen lineColor="#4F81BD"/>
							<leftPen lineColor="#4F81BD"/>
							<bottomPen lineColor="#4F81BD"/>
							<rightPen lineColor="#4F81BD"/>
						</box>
						<textField isStretchWithOverflow="true" pattern="#,##0;(#,##0)" isBlankWhenNull="true" hyperlinkType="ReportExecution" hyperlinkTarget="Blank">
							<reportElement x="0" y="0" width="100" height="20" uuid="2ea2dc08-e258-47a3-964b-85d6c5810709">
								<printWhenExpression><![CDATA[$V{FLAG1}!=1]]></printWhenExpression>
							</reportElement>
							<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
								<topPen lineWidth="0.25" lineColor="#1F497D"/>
								<leftPen lineWidth="0.25" lineColor="#1F497D"/>
								<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
								<rightPen lineWidth="0.25" lineColor="#1F497D"/>
							</box>
							<textElement textAlignment="Right" verticalAlignment="Middle">
								<font fontName="Arial" size="10"/>
							</textElement>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
							<hyperlinkParameter name="_report">
								<hyperlinkParameterExpression><![CDATA[$P{drilldown_path}+ ($V{ORDERBY1}==41 ? "EOD_market_risk_details_derivatives" : $V{ORDERBY1}==42 ? "EOD_market_risk_details_derivatives" : "EOD_market_risk_details_physical")]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp">
								<hyperlinkParameterExpression><![CDATA[2]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{CMD1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp">
								<hyperlinkParameterExpression><![CDATA[$P{col_group}.equals( "pc" )? "1":$P{col_group}.equals( "sm" )? "2":"3"]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{SHIP_MONTH1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="position">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="postype">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION_TYPE1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="cbk">
								<hyperlinkParameterExpression><![CDATA[$P{cbk}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="cmd">
								<hyperlinkParameterExpression><![CDATA[$V{CMD1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="pc">
								<hyperlinkParameterExpression><![CDATA[$V{PROFIT_CENTER1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="futterm">
								<hyperlinkParameterExpression><![CDATA[$P{futterm}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="shipmonth">
								<hyperlinkParameterExpression><![CDATA[$P{shipmonth}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="asofdate">
								<hyperlinkParameterExpression><![CDATA[$P{asofdate}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
						</textField>
						<textField isStretchWithOverflow="true" pattern="#,##0;(#,##0)" isBlankWhenNull="true" hyperlinkType="ReportExecution" hyperlinkTarget="Blank">
							<reportElement x="0" y="0" width="100" height="20" uuid="4df1f8a5-af98-4393-ac2d-8ac5e6809c8c">
								<property name="com.jaspersoft.studio.unit.x" value="px"/>
								<property name="com.jaspersoft.studio.unit.y" value="px"/>
								<printWhenExpression><![CDATA[$V{ORDERBY1}==17||$V{ORDERBY1}==27||$V{ORDERBY1}==31||$V{ORDERBY1}==32||$V{ORDERBY1}==53]]></printWhenExpression>
							</reportElement>
							<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
								<topPen lineWidth="0.25" lineColor="#1F497D"/>
								<leftPen lineWidth="0.25" lineColor="#1F497D"/>
								<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
								<rightPen lineWidth="0.25" lineColor="#1F497D"/>
							</box>
							<textElement textAlignment="Right" verticalAlignment="Middle">
								<font fontName="Arial" size="10" isBold="true" isItalic="false"/>
							</textElement>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
							<hyperlinkParameter name="_report">
								<hyperlinkParameterExpression><![CDATA[$P{drilldown_path}+ ($V{ORDERBY1}==41 ? "EOD_market_risk_details_derivatives" : $V{ORDERBY1}==42 ? "EOD_market_risk_details_derivatives" : "EOD_market_risk_details_physical")]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp">
								<hyperlinkParameterExpression><![CDATA[2]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{CMD1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp">
								<hyperlinkParameterExpression><![CDATA[$P{col_group}.equals( "pc" )? "1":$P{col_group}.equals( "sm" )? "2":"3"]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{SHIP_MONTH1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="position">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="postype">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION_TYPE1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="cbk">
								<hyperlinkParameterExpression><![CDATA[$P{cbk}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="cmd">
								<hyperlinkParameterExpression><![CDATA[$V{CMD1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="pc">
								<hyperlinkParameterExpression><![CDATA[$V{PROFIT_CENTER1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="futterm">
								<hyperlinkParameterExpression><![CDATA[$P{futterm}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="shipmonth">
								<hyperlinkParameterExpression><![CDATA[$P{shipmonth}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="asofdate">
								<hyperlinkParameterExpression><![CDATA[$P{asofdate}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
						</textField>
						<textField isStretchWithOverflow="true" pattern="#,##0;(#,##0)" isBlankWhenNull="true" hyperlinkTarget="Blank">
							<reportElement x="0" y="0" width="100" height="20" uuid="7b99f436-aaa8-43e5-b4d1-7b5e412b0234">
								<property name="com.jaspersoft.studio.unit.x" value="px"/>
								<property name="com.jaspersoft.studio.unit.y" value="px"/>
								<property name="local_mesure_unitx" value="pixel"/>
								<property name="local_mesure_unity" value="pixel"/>
								<printWhenExpression><![CDATA[$V{ORDERBY1}==44||$V{ORDERBY1}==51||$V{ORDERBY1}==52||$V{ORDERBY1}==54]]></printWhenExpression>
							</reportElement>
							<box topPadding="1" leftPadding="1" bottomPadding="1" rightPadding="1">
								<topPen lineWidth="0.25" lineColor="#1F497D"/>
								<leftPen lineWidth="0.25" lineColor="#1F497D"/>
								<bottomPen lineWidth="0.25" lineColor="#1F497D"/>
								<rightPen lineWidth="0.25" lineColor="#1F497D"/>
							</box>
							<textElement textAlignment="Right" verticalAlignment="Middle">
								<font fontName="Arial" size="10" isBold="true" isItalic="false"/>
							</textElement>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
							<hyperlinkParameter name="_report">
								<hyperlinkParameterExpression><![CDATA[$P{drilldown_path}+ ($V{ORDERBY1}==41 ? "market_risk_details_derivatives" : $V{ORDERBY1}==42 ? "market_risk_details_derivatives" : "market_risk_details_physical")]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp">
								<hyperlinkParameterExpression><![CDATA[2]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="row_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{COMMODITY1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp">
								<hyperlinkParameterExpression><![CDATA[2]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="col_grp_value">
								<hyperlinkParameterExpression><![CDATA[$V{SHIP_MONTH1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="position">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
							<hyperlinkParameter name="postype">
								<hyperlinkParameterExpression><![CDATA[$V{POSITION_TYPE1}]]></hyperlinkParameterExpression>
							</hyperlinkParameter>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" columnTotalGroup="SHIP_MONTH1">
					<cellContents mode="Opaque" style="Crosstab 3_CG">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="39335bd8-869e-414b-9049-d7a29fe0c391"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="COMMODITY1">
					<cellContents mode="Opaque" style="Crosstab 3_CT">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="9050e242-2021-4d7f-a898-f93808990089"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="COMMODITY1" columnTotalGroup="MONTHNUMBER1">
					<cellContents mode="Opaque" style="Crosstab 3_CT">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="7b1e8a9d-99cb-4f78-b311-6f21aa131f46"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="COMMODITY1" columnTotalGroup="SHIP_MONTH1">
					<cellContents mode="Opaque" style="Crosstab 3_CT">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="f31992f6-9598-454b-97e3-d0ba1de59af3"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="ORDERBY1">
					<cellContents mode="Opaque" style="Crosstab 3_CG">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="5dc0fac5-3950-4b49-bf97-bae5cf769b7f"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="ORDERBY1" columnTotalGroup="MONTHNUMBER1">
					<cellContents mode="Opaque" style="Crosstab 3_CT">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="aa8e8907-ab8c-4ddb-bf36-4555d331ee96"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="ORDERBY1" columnTotalGroup="SHIP_MONTH1">
					<cellContents mode="Opaque" style="Crosstab 3_CG">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="88f79349-56e5-41e9-8b46-f3ca763043c4"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="FLAG1">
					<cellContents mode="Opaque" style="Crosstab 3_CG">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="0e724adf-049f-4979-bb04-c5a645105284"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="FLAG1" columnTotalGroup="MONTHNUMBER1">
					<cellContents mode="Opaque" style="Crosstab 3_CT">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="169ccee2-eb44-42a9-ad00-6a73d35a0459"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="FLAG1" columnTotalGroup="SHIP_MONTH1">
					<cellContents mode="Opaque" style="Crosstab 3_CG">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="a6208d85-3a7e-4177-818f-9d9de3b8ad95"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="POSITION1">
					<cellContents mode="Opaque" style="Crosstab 3_CG">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="c5f89707-f09b-40ef-84c3-2383ac021958"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="POSITION1" columnTotalGroup="MONTHNUMBER1">
					<cellContents mode="Opaque" style="Crosstab 3_CT">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="62a629b0-b171-4ff0-9cad-9d34b2c74228"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="POSITION1" columnTotalGroup="SHIP_MONTH1">
					<cellContents mode="Opaque" style="Crosstab 3_CG">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="b60e1972-d21f-4896-a056-d2f8890fdf83"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="POSITION_TYPE1">
					<cellContents mode="Opaque" style="Crosstab 3_CG">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="f4ed6700-8797-4d6f-94b6-41c91236a69c"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="POSITION_TYPE1" columnTotalGroup="MONTHNUMBER1">
					<cellContents mode="Opaque" style="Crosstab 3_CT">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="1dde9f3f-324a-45ab-8b5f-d84666a7face"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell width="60" height="20" rowTotalGroup="POSITION_TYPE1" columnTotalGroup="SHIP_MONTH1">
					<cellContents mode="Opaque" style="Crosstab 3_CG">
						<textField>
							<reportElement x="0" y="0" width="60" height="20" uuid="9cec94b8-a2b1-4435-b039-a1f986193ab1"/>
							<textFieldExpression><![CDATA[$V{QTY_MEASURE1}]]></textFieldExpression>
						</textField>
					</cellContents>
				</crosstabCell>
				<crosstabCell rowTotalGroup="PROFIT_CENTER1">
					<cellContents mode="Opaque" style="Crosstab 3_CG"/>
				</crosstabCell>
				<crosstabCell rowTotalGroup="PROFIT_CENTER1" columnTotalGroup="MONTHNUMBER1">
					<cellContents mode="Opaque" style="Crosstab 3_CT"/>
				</crosstabCell>
				<crosstabCell rowTotalGroup="PROFIT_CENTER1" columnTotalGroup="SHIP_MONTH1">
					<cellContents mode="Opaque" style="Crosstab 3_CG"/>
				</crosstabCell>
				<crosstabCell rowTotalGroup="CMD1">
					<cellContents mode="Opaque" style="Crosstab 3_CG"/>
				</crosstabCell>
				<crosstabCell rowTotalGroup="CMD1" columnTotalGroup="MONTHNUMBER1">
					<cellContents mode="Opaque" style="Crosstab 3_CT"/>
				</crosstabCell>
				<crosstabCell rowTotalGroup="CMD1" columnTotalGroup="SHIP_MONTH1">
					<cellContents mode="Opaque" style="Crosstab 3_CG"/>
				</crosstabCell>
			</crosstab>
		</band>
	</detail>
</jasperReport>
